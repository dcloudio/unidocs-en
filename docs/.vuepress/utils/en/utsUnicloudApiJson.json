{"uniCloud_props":{"name":"# uniCloud","description":"","param":"## 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| config | [UniCloudInitOptions](#unicloudinitoptions-values) | 是 | - | - |\n### UniCloudInitOptions 属性值 @unicloudinitoptions-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| provider | string | 是 | - | 服务商，目前支持 aliyun、tencent |\n| spaceName | string | 否 | - | 服务空间名 |\n| spaceId | string | 是 | - | 服务空间id |\n| clientSecret | string | 否 | - | 阿里云clientSecret |\n| endpoint | string | 否 | - | 阿里云endpoint |\n","returnValue":"","compatibility":"","tutorial":""},"callFunction":{"name":"## callFunction(options) @callfunction","description":"请求云函数","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | [UniCloudCallFunctionOptions](#unicloudcallfunctionoptions-values) | 是 | - | - |\n#### UniCloudCallFunctionOptions 属性值 @unicloudcallfunctionoptions-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| name | \"string\" \\\\| string.CloudFunctionString | 是 | - | 云函数名 |\n| data | any | 否 | - | 云函数参数 |\n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| Promise<[UniCloudCallFunctionResult](#unicloudcallfunctionresult-values)> | \n\n#### UniCloudCallFunctionResult 属性值 @unicloudcallfunctionresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| result | any | 是 | - | 云函数参数 |\n| requestId | string | 否 | - | 云函数请求id |\n","compatibility":"### callFunction 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"unicloud-call-function":{"example":"## 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/unicloud-call-function/unicloud-call-function.uvue) \n ```html\n<template>\n  <!-- #ifdef APP -->\n  <scroll-view style=\"flex: 1\">\n  <!-- #endif -->\n    <view>\n      <page-head :title=\"title\"></page-head>\n      <view class=\"uni-padding-wrap uni-common-mt\">\n        <view class=\"uni-btn-v uni-common-mt\">\n          <button type=\"primary\" @click=\"callFunction\">请求云函数</button>\n        </view>\n      </view>\n    </view>\n  <!-- #ifdef APP -->\n  </scroll-view>\n  <!-- #endif -->\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        title: '请求云函数',\n        callFunctionResult: {},\n        callFunctionError: {},\n        isUniTest: false\n      }\n    },\n    onLoad() {\n    },\n    onUnload() {\n      if(this.isUniTest){\n        uni.hideToast()\n      }\n    },\n    methods: {\n      notify(content : string, title : string) {\n        if (!this.isUniTest) {\n          uni.showModal({\n            title,\n            content,\n            showCancel: false\n          })\n        } else {\n          uni.showToast({\n            title: content\n          })\n        }\n      },\n      callFunction: function () {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        uniCloud.callFunction({\n          name: 'echo-cf',\n          data: {\n            num: 1,\n            str: 'ABC'\n          }\n        }).then<void>(res => {\n          const result = res.result\n          this.callFunctionResult = result\n          console.log(JSON.stringify(result))\n          uni.hideLoading()\n          this.notify(result['showMessage'] as string, '提示')\n        }).catch<void>((err : any | null) => {\n          const error = err as UniCloudError\n          this.callFunctionError = {\n            errCode: error.errCode,\n            errMsg: error.errMsg\n          }\n          uni.hideLoading()\n          this.notify(error.errMsg, '错误')\n        })\n      }\n    }\n  }\n</script>\n\n<style>\n</style>\n```"},"importObject":{"name":"## importObject(objectName, options?) @importobject","description":"引用云对象","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| objectName | \"string\" \\\\| string.CloudObjectString | 是 | - | - |\n| options | [UniCloudImportObjectOptions](#unicloudimportobjectoptions-values) | 否 | - | - |\n#### UniCloudImportObjectOptions 属性值 @unicloudimportobjectoptions-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| customUI | boolean | 否 | - | 是否移除自动展示的ui |\n| loadingOptions | [UniCloudImportObjectLoadingOptions](#unicloudimportobjectloadingoptions-values) | 否 | - | loading界面配置 |\n| errorOptions | [UniCloudImportObjectErrorOptions](#unicloudimportobjecterroroptions-values) | 否 | - | 错误提示配置 |\n\n##### UniCloudImportObjectLoadingOptions 属性值 @unicloudimportobjectloadingoptions-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| title | string | 否 | - | 加载框标题 |\n| mask | boolean | 否 | - | 加载框是否显示mask |\n\n##### UniCloudImportObjectErrorOptions 属性值 @unicloudimportobjecterroroptions-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 否 | - | 错误提示类型，可以是modal或者toast |\n| retry | boolean | 否 | - | 是否显示重试按钮 |\n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| any | \n","compatibility":"### importObject 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"unicloud-import-object":{"example":"## 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/unicloud-import-object/unicloud-import-object.uvue) \n ```html\n<template>\n  <!-- #ifdef APP -->\n  <scroll-view style=\"flex:1\">\n  <!-- #endif -->\n    <view>\n      <page-head :title=\"title\"></page-head>\n      <view class=\"uni-padding-wrap uni-common-mt\">\n        <view class=\"uni-btn-v uni-common-mt\">\n          <button type=\"primary\" @tap=\"addTodo\">添加Todo</button>\n        </view>\n        <view class=\"uni-btn-v uni-common-mt\">\n          <button type=\"primary\" @tap=\"randomFail\">随机触发失败重试</button>\n        </view>\n        <view class=\"uni-btn-v uni-common-mt\">\n          <button type=\"primary\" @tap=\"fail\">云对象失败调用</button>\n        </view>\n        <view class=\"uni-btn-v uni-common-mt\">\n          <button type=\"primary\" @tap=\"success\">云对象成功调用</button>\n        </view>\n      </view>\n    </view>\n  <!-- #ifdef APP -->\n  </scroll-view>\n  <!-- #endif -->\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        title: '请求云对象',\n        todoTitle: '学习编程',\n        todoContent: '熟悉uts语法',\n        returnTodoTitle: '',\n        returnTodoContent: '',\n        failErrCode: '',\n        successErrCode: -1,\n        isUniTest: false\n      }\n    },\n    onUnload() {\n      if(this.isUniTest){\n        uni.hideToast()\n      }\n    },\n    methods: {\n      notify(content : string, title : string) {\n        if (!this.isUniTest) {\n          uni.showModal({\n            title,\n            content,\n            showCancel: false\n          })\n        } else {\n          uni.showToast({\n            title: content\n          })\n        }\n      },\n      addTodo() {\n        const todo = uniCloud.importObject('todo', {\n          customUI: this.isUniTest\n        })\n        const title = this.todoTitle\n        const content = this.todoContent\n        todo.add(title, content).then<void>((res : UTSJSONObject) : void => {\n          this.returnTodoTitle = res['title'] as string\n          this.returnTodoContent = res['content'] as string\n          this.notify(res['showMessage'] as string, '提示')\n        }).catch<void>((err : any | null) : void => {\n          const error = err as UniCloudError\n          console.error(error)\n        })\n      },\n      randomFail() {\n        const todoObj = uniCloud.importObject('todo', {\n          errorOptions: {\n            retry: true\n          }\n        })\n        todoObj.randomFail().then<void>((res : UTSJSONObject) : void => {\n          this.notify(res['showMessage'] as string, '提示')\n        }).catch<void>((err : any | null) : void => {\n          const error = err as UniCloudError\n          console.error(error)\n        })\n      },\n      fail() {\n        const todo = uniCloud.importObject('todo', {\n          customUI: this.isUniTest\n        })\n        todo.fail().then<void>((res : UTSJSONObject) : void => {\n          this.notify('todo.fail应调用失败，此处错误的触发了成功回调', '错误')\n          console.log('todo.fail: ', res);\n        }).catch<void>((err : any | null) : void => {\n          const error = err as UniCloudError\n          this.failErrCode = error.errCode as string\n          console.error(error)\n          if (this.isUniTest) {\n            uni.showToast({\n              title: err.errMsg\n            })\n          }\n        })\n      },\n      success() {\n        const todo = uniCloud.importObject('todo', {\n          customUI: this.isUniTest\n        })\n        todo.success().then<void>((res : UTSJSONObject) : void => {\n          this.successErrCode = res['errCode'] as number\n          this.notify(res['showMessage'] as string, '提示')\n        }).catch<void>((err : any | null) : void => {\n          const error = err as UniCloudError\n          console.error(error)\n        })\n      }\n    }\n  }\n</script>\n\n<style>\n\n</style>\n```"},"uploadFile":{"name":"## uploadFile(options) @uploadfile","description":"上传文件到云存储","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | [UniCloudUploadFileOptions](#uniclouduploadfileoptions-values) | 是 | - | - |\n#### UniCloudUploadFileOptions 属性值 @uniclouduploadfileoptions-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| filePath | string | 是 | - | 文件路径 |\n| cloudPath | string | 是 | - | 云端路径 |\n| cloudPathAsRealPath | boolean | 否 | - | 是否以云端路径是否为真实路径保存上传的文件 |\n| onUploadProgress | (options: [UniCloudUploadProgress](#uniclouduploadprogress-values)) => any | 否 | - | 上传进度回调 |\n\n##### UniCloudUploadProgress 属性值 @uniclouduploadprogress-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| loaded | number | 是 | - | 已上传大小 |\n| total | number | 是 | - | 总大小 |\n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| Promise<[UniCloudUploadFileResult](#uniclouduploadfileresult-values)> | \n\n#### UniCloudUploadFileResult 属性值 @uniclouduploadfileresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| filePath | string | 是 | - | 文件路径 |\n| fileID | string | 是 | - | 文件id |\n","compatibility":"### uploadFile 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"getTempFileURL":{"name":"## getTempFileURL(options) @gettempfileurl","description":"获取文件临时URL","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | [UniCloudGetTempFileURLOptions](#unicloudgettempfileurloptions-values) | 是 | - | - |\n#### UniCloudGetTempFileURLOptions 属性值 @unicloudgettempfileurloptions-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| fileList | Array\\<string\\> | 是 | - | 文件列表 |\n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| Promise<[UniCloudGetTempFileURLResult](#unicloudgettempfileurlresult-values)> | \n\n#### UniCloudGetTempFileURLResult 属性值 @unicloudgettempfileurlresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| fileList | Array\\<[UniCloudGetTempFileURLResultItem](#unicloudgettempfileurlresultitem-values)\\> | 是 | - | 文件列表 |\n\n##### UniCloudGetTempFileURLResultItem 属性值 @unicloudgettempfileurlresultitem-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| fileID | string | 是 | - | 文件id |\n| tempFileURL | string | 是 | - | 文件临时url |\n","compatibility":"### getTempFileURL 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"chooseAndUploadFile":{"name":"## chooseAndUploadFile(options) @chooseanduploadfile","description":"选择并上传文件","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| options | [UniCloudChooseAndUploadFileOptions](#unicloudchooseanduploadfileoptions-values) | 是 | - | - |\n#### UniCloudChooseAndUploadFileOptions 属性值 @unicloudchooseanduploadfileoptions-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| sourceType | Array\\<string\\> | 否 | - | - |\n| count | number | 否 | - | - |\n| sizeType | Array\\<string\\> | 否 | - | - |\n| extension | Array\\<string\\> | 否 | - | - |\n| compressed | boolean | 否 | - | - |\n| maxDuration | number | 否 | - | - |\n| camera | string | 否 | - | - |\n| crop | ChooseImageCropOptions | 否 | - | - |\n| type | string | 是 | - | - |\n| onChooseFile | (arg: [UniCloudChooseFileResult](#unicloudchoosefileresult-values)) => void | 否 | - | - |\n| onUploadProgress | (arg: [UniCloudChooseAndUploadFileProgressEvent](#unicloudchooseanduploadfileprogressevent-values)) => void | 否 | - | - |\n\n##### UniCloudChooseFileResult 属性值 @unicloudchoosefileresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| tempFiles | Array\\<[UniCloudChooseFileItem](#unicloudchoosefileitem-values)\\> | 是 | - | - |\n| tempFilePaths | Array\\<string\\> | 是 | - | - |\n\n###### UniCloudChooseFileItem 属性值 @unicloudchoosefileitem-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| name | string | 是 | - | - |\n| path | string | 是 | - | - |\n| cloudPath | string | 是 | - | - |\n| cloudPathAsRealPath | boolean | 否 | - | - |\n| url | string | 否 | - | - |\n| errMsg | string | 否 | - | - |\n\n##### UniCloudChooseAndUploadFileProgressEvent 属性值 @unicloudchooseanduploadfileprogressevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| index | number | 是 | - | - |\n| loaded | number | 是 | - | - |\n| total | number | 是 | - | - |\n| tempFilePath | string | 是 | - | - |\n| tempFile | [UniCloudChooseFileItem](#unicloudchoosefileitem-values) | 是 | - | - |\n","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| Promise<[UniCloudChooseAndUploadFileResult](#unicloudchooseanduploadfileresult-values)> | \n\n#### UniCloudChooseAndUploadFileResult 属性值 @unicloudchooseanduploadfileresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| tempFiles | Array\\<[UniCloudChooseFileItem](#unicloudchoosefileitem-values)\\> | 是 | - | - |\n| tempFilePaths | Array\\<string\\> | 是 | - | - |\n\n##### UniCloudChooseFileItem 属性值 @unicloudchoosefileitem-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| name | string | 是 | - | - |\n| path | string | 是 | - | - |\n| cloudPath | string | 是 | - | - |\n| cloudPathAsRealPath | boolean | 否 | - | - |\n| url | string | 否 | - | - |\n| errMsg | string | 否 | - | - |\n","compatibility":"### chooseAndUploadFile 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"unicloud-file-api":{"example":"## 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/unicloud-file-api/unicloud-file-api.uvue) \n ```html\n<template>\n  <!-- #ifdef APP -->\n  <scroll-view style=\"flex: 1\">\n  <!-- #endif -->\n    <view>\n      <page-head :title=\"title\"></page-head>\n      <view class=\"uni-padding-wrap uni-common-mt\">\n        <view class=\"uni-btn-v uni-common-mt\">\n          <button type=\"primary\" @click=\"uploadFile\">选择文件上传</button>\n        </view>\n      </view>\n    </view>\n  <!-- #ifdef APP -->\n  </scroll-view>\n  <!-- #endif -->\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        title: '云存储'\n      }\n    },\n    onLoad() {\n    },\n    onUnload() {\n    },\n    methods: {\n      uploadFile: function () {\n        uni.chooseImage({\n          count: 1,\n          success(res) : void {\n            uni.showLoading({\n              title: '上传中...'\n            })\n            const tempFilePath = res.tempFilePaths[0]\n            uniCloud.uploadFile({\n              filePath: tempFilePath,\n              cloudPath: 'test.jpg'\n            })\n              .then<void>(function (res) {\n                uni.hideLoading()\n                console.log(res)\n                uni.showModal({\n                  content: '上传成功',\n                  showCancel: false\n                });\n              })\n              .catch<void>(function (err : any | null) {\n                uni.hideLoading()\n                const error = err as UniCloudError\n                uni.showModal({\n                  content: '上传失败，' + error.errMsg,\n                  showCancel: false\n                });\n              })\n            // .finally((_: number) : void => {\n            //   uni.hideLoading()\n            // })\n          },\n          fail(err) : void {\n            console.error('chooseImage fail: ', err)\n          }\n        })\n      }\n    }\n  }\n</script>\n\n<style>\n</style>\n```"},"databaseForJQL":{"name":"## databaseForJQL() @databaseforjql","description":"获取数据库操作实例","param":"","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| [Database](#database-values) | \n\n#### Database 属性值 @database-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| collection | (args?: Array\\<any\\>) => [Collection](#collection-values) | 是 | - | - |\n| command | any | 是 | - | - |\n| Geo | any | 是 | - | - |\n\n##### Collection 属性值 @collection-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| where | (condition: any) => [UniCloudDBFilter](#uniclouddbfilter-values) | 是 | - | - |\n| doc | (docId: string) => [UniCloudDBFilter](#uniclouddbfilter-values) | 是 | - | - |\n| aggregate | () => [UniCloudDBFilter](#uniclouddbfilter-values) | 是 | - | - |\n| foreignKey | (foreignKey: string) => [UniCloudDBFilter](#uniclouddbfilter-values) | 是 | - | - |\n| add | (data: any) => Promise<[UniCloudDBAddResult](#uniclouddbaddresult-values)> | 是 | - | - |\n| get | (arg?: any) => Promise<[UniCloudDBGetResult](#uniclouddbgetresult-values)> | 是 | - | - |\n| count | () => Promise<[UniCloudDBCountResult](#uniclouddbcountresult-values)> | 是 | - | - |\n| getTemp | () => any | 是 | - | - |\n| field | (filed: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| skip | (num: number) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| limit | (num: number) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| orderBy | (order: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n\n###### UniCloudDBFilter 属性值 @uniclouddbfilter-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| get | (arg?: any) => Promise<[UniCloudDBGetResult](#uniclouddbgetresult-values)> | 是 | - | - |\n| count | () => Promise<[UniCloudDBCountResult](#uniclouddbcountresult-values)> | 是 | - | - |\n| update | (data: any) => Promise<[UniCloudDBUpdateResult](#uniclouddbupdateresult-values)> | 是 | - | - |\n| remove | () => Promise<[UniCloudDBRemoveResult](#uniclouddbremoveresult-values)> | 是 | - | - |\n| getTemp | () => any | 是 | - | - |\n| where | (condition: any) => [UniCloudDBFilter](#uniclouddbfilter-values) | 是 | - | - |\n| doc | (docId: string) => [UniCloudDBFilter](#uniclouddbfilter-values) | 是 | - | - |\n| field | (filed: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| skip | (num: number) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| limit | (num: number) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| orderBy | (order: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| groupBy | (field: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| groupField | (field: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| distinct | (field: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| geoNear | (options: any) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n\n###### UniCloudDBGetResult 属性值 @uniclouddbgetresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| data | Array\\<any\\> | 是 | - | etResult = {     /** |\n| count | number | 否 | - | JSONObject>;     /** |\n| requestId | string | 否 | - | ber \\| null;     / |\n\n###### UniCloudDBCountResult 属性值 @uniclouddbcountresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| total | number | 是 | - | ntResult = {     /** |\n| requestId | string | 否 | - | al: number;     / |\n\n###### UniCloudDBUpdateResult 属性值 @uniclouddbupdateresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| updated | number | 是 | - | teResult = {     /** |\n| requestId | string | 否 | - | ted: number;     / |\n\n###### UniCloudDBRemoveResult 属性值 @uniclouddbremoveresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| deleted | number | 是 | - | veResult = {     /** |\n| requestId | string | 否 | - | ted: number;     / |\n\n###### UniCloudDBQuery 属性值 @uniclouddbquery-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| get | (arg?: any) => Promise<[UniCloudDBGetResult](#uniclouddbgetresult-values)> | 是 | - | - |\n| count | () => Promise<[UniCloudDBCountResult](#uniclouddbcountresult-values)> | 是 | - | - |\n| getTemp | () => any | 是 | - | - |\n| field | (filed: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| skip | (num: number) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| limit | (num: number) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| orderBy | (order: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| groupBy | (field: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| groupField | (field: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| distinct | (field: string) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n| geoNear | (options: any) => [UniCloudDBQuery](#uniclouddbquery-values) | 是 | - | - |\n\n###### UniCloudDBAddResult 属性值 @uniclouddbaddresult-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| id | string | 是 | - | ddResult = {     /** |\n| requestId | string | 否 | - | string;     / |\n","compatibility":"### databaseForJQL 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.91，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"unicloud-database":{"example":"## 示例 \n> [hello uni-app x](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/alpha/pages/API/unicloud-database/unicloud-database.uvue) \n ```html\n<template>\n  <!-- #ifdef APP -->\n  <scroll-view style=\"flex: 1\">\n  <!-- #endif -->\n    <view>\n      <page-head :title=\"title\"></page-head>\n      <view class=\"uni-padding-wrap uni-common-mt\">\n        <view class=\"uni-btn-v uni-common-mt\">\n          <button type=\"primary\" @click=\"dbAdd\">新增单条数据</button>\n          <button type=\"primary\" @click=\"dbBatchAdd\">新增多条数据</button>\n          <button type=\"primary\" @click=\"dbUpdate\">更新数据</button>\n          <button type=\"primary\" @click=\"dbGet\">where传字符串获取数据</button>\n          <button type=\"primary\" @click=\"dbGetWithCommand\">where传对象获取数据</button>\n          <button type=\"primary\" @click=\"dbRemove\">删除数据</button>\n          <button type=\"primary\" @click=\"dbLookupInit\">初始化联表查询数据</button>\n          <button type=\"primary\" @click=\"dbLookup\">联表查询</button>\n        </view>\n      </view>\n    </view>\n  <!-- #ifdef APP -->\n  </scroll-view>\n  <!-- #endif -->\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        title: 'ClientDB',\n        addId: '',\n        batchAddIds: [] as Array<string>,\n        batchAddinserted: 0,\n        updateUpdated: 0,\n        getData: [] as Array<UTSJSONObject>,\n        getWithCommandData: [] as Array<UTSJSONObject>,\n        removeDeleted: 0,\n        lookupData: [] as Array<UTSJSONObject>,\n        isUniTest: false\n      }\n    },\n    onLoad() {\n    },\n    onUnload() {\n      if(this.isUniTest){\n        uni.hideToast()\n      }\n    },\n    methods: {\n      notify(content : string, title : string) {\n        if (!this.isUniTest) {\n          uni.showModal({\n            title,\n            content,\n            showCancel: false\n          })\n        } else {\n          uni.showToast({\n            title: content\n          })\n        }\n      },\n      dbAdd: function () {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        const db = uniCloud.databaseForJQL()\n        db.collection('type')\n          .add({\n            num: 1,\n            tag: 'default-tag',\n            date: new Date(),\n            point: new db.Geo.Point(116, 38)\n          })\n          .then<void>(res => {\n            uni.hideLoading()\n            console.log(res)\n            this.addId = res.id\n            this.notify(`新增成功，id: ${res.id}`, '提示')\n          })\n          .catch<void>((err : any | null) => {\n            uni.hideLoading()\n            const error = err as UniCloudError\n            this.notify(error.errMsg, '错误')\n          })\n      },\n      dbBatchAdd() {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        const db = uniCloud.databaseForJQL()\n        db.collection('type')\n          .add([{\n            num: 2,\n            tag: 'default-tag',\n          }, {\n            num: 3,\n            tag: 'default-tag',\n          }])\n          .then<void>((res) => {\n            uni.hideLoading()\n            console.log(res)\n            console.log('JSON.stringify(res.inserted)', JSON.stringify(res.inserted))\n            this.batchAddIds = res.ids\n            this.batchAddinserted = res.inserted\n            this.notify(`新增成功条数${res.inserted}, id列表: ${res.ids.join(',')}`, '提示')\n          })\n          .catch<void>((err : any | null) => {\n            uni.hideLoading()\n            const error = err as UniCloudError\n            this.notify(error.errMsg, '错误')\n          })\n      },\n      dbGet() {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        const db = uniCloud.databaseForJQL()\n        db.collection('type')\n          .where(\n            'tag == \"default-tag\"'\n          )\n          .field('num, tag')\n          .orderBy('num desc')\n          .skip(1)\n          .limit(2)\n          .get()\n          .then<void>(res => {\n            uni.hideLoading()\n            console.log(res)\n            this.getData = res.data\n            this.notify(`获取成功，取到了${res.data.length}条数据`, '提示')\n          })\n          .catch<void>((err : any | null) => {\n            uni.hideLoading()\n            const error = err as UniCloudError\n            this.notify(error.errMsg, '错误')\n          })\n      },\n      dbGetWithCommand() {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        const db = uniCloud.databaseForJQL()\n        db.collection('type')\n          .where({\n            num: db.command.gt(1)\n          })\n          .field('num, tag')\n          .orderBy('num desc')\n          .skip(1)\n          .limit(2)\n          .get()\n          .then<void>(res => {\n            uni.hideLoading()\n            console.log(res)\n            this.getWithCommandData = res.data\n            this.notify(`获取成功，取到了${res.data.length}条数据`, '提示')\n          })\n          .catch<void>((err : any | null) => {\n            uni.hideLoading()\n            const error = err as UniCloudError\n            this.notify(error.errMsg, '错误')\n          })\n      },\n      dbUpdate() {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        const db = uniCloud.databaseForJQL()\n        db.collection('type')\n          .where(\n            'tag == \"default-tag\"'\n          )\n          .update({\n            num: 4\n          })\n          .then<void>(res => {\n            uni.hideLoading()\n            console.log(res)\n            this.updateUpdated = res.updated\n            this.notify(`更新成功，更新了${res.updated}条数据`, '提示')\n          })\n          .catch<void>((err : any | null) => {\n            uni.hideLoading()\n            const error = err as UniCloudError\n            this.notify(error.errMsg, '错误')\n          })\n      },\n      dbRemove() {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        const db = uniCloud.databaseForJQL()\n        db.collection('type')\n          .where(\n            'tag == \"default-tag\"'\n          )\n          .remove()\n          .then<void>(res => {\n            uni.hideLoading()\n            console.log(res)\n            this.removeDeleted = res.deleted\n            this.notify(`删除成功，删掉了${res.deleted}条数据`, '提示')\n          })\n          .catch<void>((err : any | null) => {\n            uni.hideLoading()\n            const error = err as UniCloudError\n            this.notify(error.errMsg, '错误')\n          })\n      },\n      dbLookupInit() {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        const db = uniCloud.databaseForJQL()\n        db.collection('local')\n          .where('tag == \"default-tag\"')\n          .remove()\n          .then(() : Promise<UniCloudDBRemoveResult> => {\n            return db.collection('foreign')\n              .where('tag == \"default-tag\"')\n              .remove()\n          })\n          .then(() : Promise<UniCloudDBBatchAddResult> => {\n            return db.collection('local')\n              .add([{\n                id: \"local_1\",\n                name: \"local_1_name\",\n                tag: \"default-tag\",\n                foreign_id: \"foreign_1\"\n              }, {\n                id: \"local_2\",\n                name: \"local_2_name\",\n                tag: \"default-tag\",\n                foreign_id: \"foreign_2\"\n              }])\n          })\n          .then(() : Promise<UniCloudDBBatchAddResult> => {\n            return db.collection('foreign')\n              .add([{\n                id: \"foreign_1\",\n                name: \"foreign_1_name\",\n                tag: \"default-tag\"\n              }, {\n                id: \"foreign_2\",\n                name: \"foreign_2_name\",\n                tag: \"default-tag\"\n              }])\n          })\n          .then<void>((_) : void => {\n            uni.hideLoading()\n            this.notify('数据初始化成功', '提示')\n          })\n          .catch<void>((err : any | null) => {\n            uni.hideLoading()\n            console.error(err)\n            const error = err as UniCloudError\n            this.notify(error.errMsg, '错误')\n          })\n      },\n      dbLookup() {\n        uni.showLoading({\n          title: '加载中...'\n        })\n        const db = uniCloud.databaseForJQL()\n        const local = db.collection('local')\n          .where('tag == \"default-tag\"')\n          .getTemp()\n        const foreign = db.collection('foreign')\n          .where('tag == \"default-tag\"')\n          .getTemp()\n        db.collection(local, foreign)\n          .get()\n          .then<void>(res => {\n            uni.hideLoading()\n            console.log(res)\n            this.lookupData = res.data\n            this.notify(`联表查询成功，取到了${res.data.length}条数据`, '提示')\n          })\n          .catch<void>((err : any | null) => {\n            uni.hideLoading()\n            const error = err as UniCloudError\n            this.notify(error.errMsg, '错误')\n          })\n      }\n    }\n  }\n</script>\n\n<style>\n</style>\n```"},"onResponse":{"name":"## onResponse(UniCloudCallback<T>) @onresponse","description":"监听响应事件","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| UniCloudCallback<T> | (arg: [UniCloudResponseEvent](#unicloudresponseevent-values)) => any | 是 | - | - |\n#### UniCloudResponseEvent 属性值 @unicloudresponseevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 响应事件类型 |\n| name | string | 是 | - | 响应事件由哪个云函数触发 |\n| content | any | 是 | - | 响应结果、错误内容 |\n","returnValue":"","compatibility":"### onResponse 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"offResponse":{"name":"## offResponse(UniCloudCallback<T>) @offresponse","description":"移除响应事件监听","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| UniCloudCallback<T> | (arg: [UniCloudResponseEvent](#unicloudresponseevent-values)) => any | 是 | - | - |\n#### UniCloudResponseEvent 属性值 @unicloudresponseevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 响应事件类型 |\n| name | string | 是 | - | 响应事件由哪个云函数触发 |\n| content | any | 是 | - | 响应结果、错误内容 |\n","returnValue":"","compatibility":"### offResponse 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"onRefreshToken":{"name":"## onRefreshToken(UniCloudCallback<T>) @onrefreshtoken","description":"监听token刷新事件","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| UniCloudCallback<T> | (arg: [UniCloudResponseEvent](#unicloudresponseevent-values)) => any | 是 | - | - |\n#### UniCloudResponseEvent 属性值 @unicloudresponseevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 响应事件类型 |\n| name | string | 是 | - | 响应事件由哪个云函数触发 |\n| content | any | 是 | - | 响应结果、错误内容 |\n","returnValue":"","compatibility":"### onRefreshToken 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"offRefreshToken":{"name":"## offRefreshToken(UniCloudCallback<T>) @offrefreshtoken","description":"移除token刷新事件监听","param":"### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| UniCloudCallback<T> | (arg: [UniCloudResponseEvent](#unicloudresponseevent-values)) => any | 是 | - | - |\n#### UniCloudResponseEvent 属性值 @unicloudresponseevent-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 响应事件类型 |\n| name | string | 是 | - | 响应事件由哪个云函数触发 |\n| content | any | 是 | - | 响应结果、错误内容 |\n","returnValue":"","compatibility":"### offRefreshToken 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""},"getCurrentUserInfo":{"name":"## getCurrentUserInfo() @getcurrentuserinfo","description":"获取token内缓存的用户信息","param":"","returnValue":"### 返回值 \n\n| 类型 |\n| :- |\n| [UniCloudUserInfo](#uniclouduserinfo-values) | \n\n#### UniCloudUserInfo 属性值 @uniclouduserinfo-values \n\n| 名称 | 类型 | 必备 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| uid | string | 否 | - | UserInfo = {     / |\n| role | Array\\<string\\> | 是 | - | ing \\| null;     / |\n| permission | Array\\<string\\> | 是 | - | ay\\<string>;     / |\n| tokenExpired | number | 是 | - | ay\\<string>;     /** |\n","compatibility":"### getCurrentUserInfo 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | √ | 阿里云 3.9，腾讯云 3.91 | - | √ | x |\n","tutorial":""}}