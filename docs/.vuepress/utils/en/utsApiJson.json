{
  "getApp": {
    "name": "## getApp(opts?) @getapp",
    "description": "",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| opts | [GetAppOption](#getappoption) | 否 | - |\n#### GetAppOption @getappoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| allowDefault | boolean | 是 |  在 `App` 未定义时返回默认实现。当App被调用时，默认实现中定义的属性会被覆盖合并到App中。一般用于独立分包 |\n",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [AppInstance\\<T\\> & T](#appinstance) | \n\n#### AppInstance\\<T\\> & T @appinstance \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| globalData | [AnyObject](#anyobject) | 否 |  全局对象 文档：\\[https://uniapp.dcloud.io/collocation/App?id=globaldata\\](https://uniapp.dcloud.io/collocation/App?id=globaldata) |\n| onLaunch | ([LaunchShowOption](#launchshowoption)?) => void | 否 |  生命周期回调 监听应用初始化  应用初始化完成时触发，全局只触发一次。  |\n| onShow | ([LaunchShowOption](#launchshowoption)?) => void | 否 |  生命周期回调 监听应用显示  应用启动，或从后台进入前台显示时触发  |\n| onHide | () => void | 否 |  生命周期回调 监听应用隐藏  应用从前台进入后台时触发  |\n| onError | (string) => void | 否 |  错误监听函数 小程序发生脚本错误或 API 调用报错时触发 |\n| onPageNotFound | ([PageNotFoundOption](#pagenotfoundoption)) => void | 否 |  页面不存在监听函数  应用要打开的页面不存在时触发，会带上页面信息回调该函数  **注意：** 1. 如果开发者没有添加 `onPageNotFound` 监听，当跳转页面不存在时，将推入微信客户端原生的页面不存在提示页面。 2. 如果 `onPageNotFound` 回调中又重定向到另一个不存在的页面，将推入微信客户端原生的页面不存在提示页面，并且不再回调 `onPageNotFound`。  |\n| onUnhandledRejection | (UniNamespace.OnUnhandledRejectionCallbackResult) => void | 否 |  未处理的 Promise 拒绝事件监听函数  |\n| onThemeChange | (UniNamespace.OnThemeChangeCallbackResult) => void | 否 |  监听系统主题变化  |\n| onUniNViewMessage | ([AnyObject](#anyobject)) => void | 否 |  监听 nvue 页面消息  nvue 页面使用 `uni.postMessage` 发送消息时触发  |\n| onExit | () => void | 否 |  监听应用退出。app-uvue-android 3.9+  |\n| onLastPageBackPress | () => void | 否 |  最后一个页面按下Android back键，常用于自定义退出。app-uvue-android 3.9+  |\n\n##### LaunchShowOption @launchshowoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| path | string | 是 |  打开小程序的路径 |\n| query | [AnyObject](#anyobject) | 是 |  打开小程序的query |\n| scene | number | 是 |  打开小程序的场景值 - 1001: 发现栏小程序主入口，「最近使用」列表（基础库2.2.4版本起包含「我的小程序」列表） - 1005: 顶部搜索框的搜索结果页 - 1006: 发现栏小程序主入口搜索框的搜索结果页 - 1007: 单人聊天会话中的小程序消息卡片 - 1008: 群聊会话中的小程序消息卡片 - 1011: 扫描二维码 - 1012: 长按图片识别二维码 - 1013: 手机相册选取二维码 - 1014: 小程序模板消息 - 1017: 前往体验版的入口页 - 1019: 微信钱包 - 1020: 公众号 profile 页相关小程序列表 - 1022: 聊天顶部置顶小程序入口 - 1023: 安卓系统桌面图标 - 1024: 小程序 profile 页 - 1025: 扫描一维码 - 1026: 附近小程序列表 - 1027: 顶部搜索框搜索结果页「使用过的小程序」列表 - 1028: 我的卡包 - 1029: 卡券详情页 - 1030: 自动化测试下打开小程序 - 1031: 长按图片识别一维码 - 1032: 手机相册选取一维码 - 1034: 微信支付完成页 - 1035: 公众号自定义菜单 - 1036: App 分享消息卡片 - 1037: 小程序打开小程序 - 1038: 从另一个小程序返回 - 1039: 摇电视 - 1042: 添加好友搜索框的搜索结果页 - 1043: 公众号模板消息 - 1044: 带 shareTicket 的小程序消息卡片 - 1045: 朋友圈广告 - 1046: 朋友圈广告详情页 - 1047: 扫描小程序码 - 1048: 长按图片识别小程序码 - 1049: 手机相册选取小程序码 - 1052: 卡券的适用门店列表 - 1053: 搜一搜的结果页 - 1054: 顶部搜索框小程序快捷入口 - 1056: 音乐播放器菜单 - 1057: 钱包中的银行卡详情页 - 1058: 公众号文章 - 1059: 体验版小程序绑定邀请页 - 1064: 微信连Wi-Fi状态栏 - 1067: 公众号文章广告 - 1068: 附近小程序列表广告 - 1069: 移动应用 - 1071: 钱包中的银行卡列表页 - 1072: 二维码收款页面 - 1073: 客服消息列表下发的小程序消息卡片 - 1074: 公众号会话下发的小程序消息卡片 - 1077: 摇周边 - 1078: 连Wi-Fi成功页 - 1079: 微信游戏中心 - 1081: 客服消息下发的文字链 - 1082: 公众号会话下发的文字链 - 1084: 朋友圈广告原生页 - 1089: 微信聊天主界面下拉，「最近使用」栏（基础库2.2.4版本起包含「我的小程序」栏） - 1090: 长按小程序右上角菜单唤出最近使用历史 - 1091: 公众号文章商品卡片 - 1092: 城市服务入口 - 1095: 小程序广告组件 - 1096: 聊天记录 - 1097: 微信支付签约页 - 1099: 页面内嵌插件 - 1102: 公众号 profile 页服务预览 - 1103: 发现栏小程序主入口，「我的小程序」列表（基础库2.2.4版本起废弃） - 1104: 微信聊天主界面下拉，「我的小程序」栏（基础库2.2.4版本起废弃） |\n| shareTicket | string | 是 |  打开小程序的场景值 |\n| referrerInfo | [ReferrerInfo](#referrerinfo) | 否 |  当场景为由从另一个小程序或公众号或App打开时，返回此字段 |\n\n###### ReferrerInfo @referrerinfo \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| appId | string | 是 |  来源小程序或公众号或App的 appId  以下场景支持返回 referrerInfo.appId： - 1020（公众号 profile 页相关小程序列表）： appId - 1035（公众号自定义菜单）：来源公众号 appId - 1036（App 分享消息卡片）：来源应用 appId - 1037（小程序打开小程序）：来源小程序 appId - 1038（从另一个小程序返回）：来源小程序 appId - 1043（公众号模板消息）：来源公众号 appId |\n| extraData | any | 否 |  来源小程序传过来的数据，scene=1037或1038时支持 |\n\n##### PageNotFoundOption @pagenotfoundoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| path | string | 是 |  不存在页面的路径 |\n| query | [AnyObject](#anyobject) | 是 |  打开不存在页面的 query |\n| isEntryPage | boolean | 是 |  是否本次启动的首个页面（例如从分享等入口进来，首个页面是开发者配置的分享页面） |\n",
    "compatibility": "",
    "tutorial": ""
  },
  "getCurrentPages": {
    "name": "## getCurrentPages() @getcurrentpages",
    "description": "",
    "param": "",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| Array\\<[PageInstance\\<AnyObject, T\\> & T](#pageinstance)\\> | \n\n#### PageInstance\\<AnyObject, T\\> & T @pageinstance \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| onInit | (Map\\<string, string\\>?) => void | 否 |  生命周期回调 监听页面初始化  页面初始化时触发。一个页面只会调用一次，可以在 onInit 的参数中获取打开当前页面路径中的参数。 |\n| onLoad | (Map\\<string, string\\>?) => void | 否 |  生命周期回调 监听页面加载  页面加载时触发。一个页面只会调用一次，可以在 onLoad 的参数中获取打开当前页面路径中的参数。 |\n| onShow | () => void | 否 |  生命周期回调 监听页面显示  页面显示/切入前台时触发。  |\n| onReady | () => void | 否 |  生命周期回调 监听页面初次渲染完成  页面初次渲染完成时触发。一个页面只会调用一次，代表页面已经准备妥当，可以和视图层进行交互。  |\n| onHide | () => void | 否 |  生命周期回调 监听页面隐藏  页面隐藏/切入后台时触发。 如 `navigateTo` 或底部 `tab` 切换到其他页面，应用切入后台等。  |\n| onUnload | () => void | 否 |  生命周期回调 监听页面卸载  页面卸载时触发。如 `redirectTo` 或 `navigateBack` 到其他页面时。  |\n| onPullDownRefresh | () => void | 否 |  监听用户下拉动作 - 需要在 `pages.json` 的页面配置中开启 `enablePullDownRefresh` 。 - 可以通过 `uni.startPullDownRefresh` 触发下拉刷新，调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。 - 当处理完数据刷新后，`uni.stopPullDownRefresh` 可以停止当前页面的下拉刷新。  |\n| onReachBottom | () => void | 否 |  页面上拉触底事件的处理函数 - 可以在 `pages.json` 的页面配置中设置触发距离 `onReachBottomDistance` 。 - 在触发距离内滑动期间，本事件只会被触发一次。  |\n| onShareAppMessage | ([ShareAppMessageOption](#shareappmessageoption)) => [CustomShareContent](#customsharecontent) | 否 |  用户点击右上角转发  监听用户点击页面内转发按钮（`\\<button\\>` 组件 `open-type=\"share\"`）或右上角菜单“转发”按钮的行为，并自定义转发内容。 |\n| onShareTimeline | () => [ShareTimelineContent](#sharetimelinecontent) | 否 |  用户点击右上角转发到朋友圈  监听右上角菜单“分享到朋友圈”按钮的行为，并自定义发享内容。  |\n| onAddToFavorites | ([AddToFavoritesOption](#addtofavoritesoption)) => [CustomFavoritesContent](#customfavoritescontent) | 否 |  用户点击右上角收藏  监听用户点击右上角菜单“收藏”按钮的行为，并自定义收藏内容。  |\n| onPageScroll | ([PageScrollOption](#pagescrolloption)) => void | 否 |  页面滚动触发事件的处理函数  监听用户滑动页面事件。 |\n| onResize | ([ResizeOption](#resizeoption)) => void | 否 |  页面尺寸改变时触发 |\n| onTabItemTap | ([TabItemTapOption](#tabitemtapoption)) => void | 否 |  当前是 tab 页时，点击 tab 时触发 |\n| onNavigationBarButtonTap | ([NavigationBarButtonTapOption](#navigationbarbuttontapoption)) => void | 否 |  监听原生标题栏按钮点击事件 |\n| onBackPress | ([BackPressOption](#backpressoption)) => any | 否 |  监听页面返回 |\n| onNavigationBarSearchInputChanged | ([NavigationBarSearchInputEvent](#navigationbarsearchinputevent)) => void | 否 |  监听原生标题栏搜索输入框输入内容变化事件  |\n| onNavigationBarSearchInputConfirmed | ([NavigationBarSearchInputEvent](#navigationbarsearchinputevent)) => void | 否 |  监听原生标题栏搜索输入框搜索事件，用户点击软键盘上的“搜索”按钮时触发。  |\n| onNavigationBarSearchInputClicked | () => void | 否 |  监听原生标题栏搜索输入框点击事件  |\n| route | string | 否 |  到当前页面的路径，类型为 `String` |\n| $getAppWebview | () => PlusWebviewWebviewObject | 否 |  获取当前页面的webview对象实例。仅 App 平台支持 |\n| $vm | any | 否 |  当前页面的 Vue 实例 |\n\n##### ShareAppMessageOption @shareappmessageoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| from | string | 是 |  转发事件来源。 可选值： - `button`：页面内转发按钮； - `menu`：右上角转发菜单。 |\n| target | any | 是 |  如果 `from` 值是 `button`，则 `target` 是触发这次转发事件的 `button`，否则为 `null` |\n| webViewUrl | string | 否 |  页面中包含 `\\<web-view\\>` 组件时，返回当前 `\\<web-view\\>` 的 url |\n\n##### AddToFavoritesOption @addtofavoritesoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| from | string | 是 |  转发事件来源。 可选值： - `button`：页面内转发按钮； - `menu`：右上角转发菜单。 |\n| webviewUrl | string | 是 |  页面中包含 `\\<web-view\\>` 组件时，返回当前 `\\<web-view\\>` 的 url |\n\n##### PageScrollOption @pagescrolloption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| scrollTop | number | 是 |  页面在垂直方向已滚动的距离（单位 px） |\n\n##### ResizeOption @resizeoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| scrollTop | number | 是 |  页面在垂直方向已滚动的距离（单位 px） |\n| size | [{ windowWidth: number; windowHeight: number; }](#windowwidth) | 否 |  新的显示区域尺寸 |\n\n###### { windowWidth: number; windowHeight: number; } @windowwidth \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| windowWidth | number | 是 |  新的显示区域宽度 |\n| windowHeight | number | 是 |  新的显示区域高度 |\n\n##### TabItemTapOption @tabitemtapoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| index | number | 是 |  被点击 tabItem 的序号，从0开始 |\n| pagePath | string | 是 |  被点击 tabItem 的页面路径 |\n| text | string | 是 |  被点击 tabItem 的按钮文字 |\n\n##### NavigationBarButtonTapOption @navigationbarbuttontapoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| index | number | 是 |  原生标题栏按钮数组的下标 |\n\n##### BackPressOption @backpressoption \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| from | string | 是 |  - backbutton 顶部导航栏左边的返回按钮或 Android 实体返回键 - navigateBack 返回 API，即 uni.navigateBack() |\n\n##### NavigationBarSearchInputEvent @navigationbarsearchinputevent \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| text | string | 是 |  搜索输入框输入内容 |\n",
    "compatibility": "",
    "tutorial": ""
  },
  "$on": {
    "name": "## uni.$on(eventName, callback) @$on",
    "description": "\r\n监听自定义事件。事件可以由 uni.$emit 触发。回调函数会接收 uni.$emit 传递的参数。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| eventName | string | 是 | - |\n| callback | Function\\<unknown\\> | 是 | - |",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[$on](http://uniapp.dcloud.io/api/window/communication?id=on)\n"
  },
  "$off": {
    "name": "## uni.$off(eventName, callback) @$off",
    "description": "\r\n移除自定义事件监听器。如果没有指定事件名，则移除所有事件监听器。如果提供事件名，则移除该事件的所有监听器。如果提供了事件名和回调，则只移除这个回调的监听器。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| eventName | string | 是 | - |\n| callback | Function\\<unknown\\> | 是 | - |",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[$off](http://uniapp.dcloud.io/api/window/communication?id=off)\n"
  },
  "$once": {
    "name": "## uni.$once(eventName, callback) @$once",
    "description": "\r\n监听一个自定义事件。事件只触发一次，在第一次触发之后移除事件监听器。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| eventName | string | 是 | - |\n| callback | Function\\<unknown\\> | 是 | - |",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[$once](http://uniapp.dcloud.io/api/window/communication?id=once)\n"
  },
  "$emit": {
    "name": "## uni.$emit(eventName, args) @$emit",
    "description": "\r\n触发自定义事件，附加的参数会传递给事件监听器。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| eventName | string | 是 | - |\n| args | any | 是 | - |",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[$emit](http://uniapp.dcloud.io/api/window/communication?id=emit)\n"
  },
  "getLaunchOptionsSync": {
    "name": "## uni.getLaunchOptionsSync() @getlaunchoptionssync",
    "description": "\r\n获取本次启动时的参数。返回值与App.onLaunch的回调参数一致\r\n",
    "param": "",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [OnLaunchOptions](#onlaunchoptions) | \n\n#### OnLaunchOptions @onlaunchoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| path | string | 是 | - |\n",
    "compatibility": "",
    "tutorial": "\n### 参见\n[getLaunchOptionsSync](http://uniapp.dcloud.io/api/plugins/getLaunchOptionsSync)\n"
  },
  "navigateTo": {
    "name": "## uni.navigateTo(options) @navigateto",
    "description": "\r\n保留当前页面，跳转到应用内的某个页面\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [NavigateToOptions](#navigatetooptions) | 是 | - |\n#### NavigateToOptions @navigatetooptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| url | string | 是 |  需要跳转的应用内非 tabBar 的页面的路径 , 路径后可以带参数 |\n| animationType | string | 否 |  窗口显示的动画类型 - auto: 自动选择动画效果 - none: 无动画效果 - slide-in-right: 从右侧横向滑动效果 - slide-in-left: 左侧横向滑动效果 - slide-in-top: 从上侧竖向滑动效果 - slide-in-bottom: 从下侧竖向滑动效果 - fade-in: 从透明到不透明逐渐显示效果 - zoom-out: 从小到大逐渐放大显示效果 - zoom-fade-out: 从小到大逐渐放大并且从透明到不透明逐渐显示效果 - pop-in: 从右侧平移入栈动画效果 - UnionType =\\> 'auto' \\| 'none' \\| 'slide-in-right' \\| 'slide-in-left' \\| 'slide-in-top' \\| 'slide-in-bottom' \\| 'fade-in' \\| 'zoom-out' \\| 'zoom-fade-out' \\| 'pop-in' |\n| animationDuration | number | 否 |  窗口显示动画的持续时间，单位为 ms |\n| events | any | 否 |  页面间通信接口，用于监听被打开页面发送到当前页面的数据 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### AsyncApiSuccessResult @asyncapisuccessresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errMsg | string | 是 | - |\n\n##### UniError @unierror \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| ctors | Constructor | 是 | - |\n| errSubject | string | 是 |  统一错误主题（模块）名称 |\n| errCode | number | 是 |  统一错误码 |\n| errMsg | string | 是 |  统一错误描述信息 |\n| data | any | 是 |  错误信息中包含的数据 |\n| name | string | 是 | - |\n| message | string | 是 | - |\n| cause | [Error](/uni-app-x/common/error.md) | 是 | - |\n\n###### Error @error \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| ctors | Constructor | 是 | - |\n| name | string | 是 | - |\n| message | string | 是 | - |\n| cause | [Error](/uni-app-x/common/error.md) | 是 | - |\n\n##### AsyncApiResult @asyncapiresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errMsg | string | 是 | - |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[navigateTo](http://uniapp.dcloud.io/api/router?id=navigateto)\n"
  },
  "redirectTo": {
    "name": "## uni.redirectTo(options) @redirectto",
    "description": "\r\n关闭当前页面，跳转到应用内的某个页面\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [RedirectToOptions](#redirecttooptions) | 是 | - |\n#### RedirectToOptions @redirecttooptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| url | string | 是 |  需要跳转的应用内非 tabBar 的页面的路径 , 路径后可以带参数 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[redirectTo](http://uniapp.dcloud.io/api/router?id=redirectto)\n"
  },
  "reLaunch": {
    "name": "## uni.reLaunch(options) @relaunch",
    "description": "\r\n关闭所有页面，打开到应用内的某个页面\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ReLaunchOptions](#relaunchoptions) | 是 | - |\n#### ReLaunchOptions @relaunchoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| url | string | 是 |  需要跳转的应用内非 tabBar 的页面的路径 , 路径后可以带参数 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[reLaunch](http://uniapp.dcloud.io/api/router?id=relaunch)\n"
  },
  "switchTab": {
    "name": "## uni.switchTab(options) @switchtab",
    "description": "\r\n跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [SwitchTabOptions](#switchtaboptions) | 是 | - |\n#### SwitchTabOptions @switchtaboptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| url | string | 是 |  需要跳转的 tabBar 页面的路径，路径后不能带参数 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[switchTab](http://uniapp.dcloud.io/api/router?id=switchtab)\n"
  },
  "navigateBack": {
    "name": "## uni.navigateBack(options?) @navigateback",
    "description": "\r\n关闭当前页面，返回上一页面或多级页面\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [NavigateBackOptions](#navigatebackoptions) | 否 | - |\n#### NavigateBackOptions @navigatebackoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| delta | number | 否 |  返回的页面数，如果 delta 大于现有页面数，则返回到首页 |\n| animationType | string | 否 |  窗口关闭的动画类型 - auto: 自动选择动画效果 - none: 无动画效果 - slide-out-right: 横向向右侧滑出屏幕动画 - slide-out-left: 横向向左侧滑出屏幕动画 - slide-out-top: 竖向向上侧滑出屏幕动画 - slide-out-bottom: 竖向向下侧滑出屏幕动画 - fade-out: 从不透明到透明逐渐隐藏动画 - zoom-in: 从大逐渐缩小关闭动画 - zoom-fade-in: 从大逐渐缩小并且从不透明到透明逐渐隐藏关闭动画 - pop-out: 从右侧平移出栈动画效果 - UnionType =\\> 'auto' \\| 'none' \\| 'slide-out-right' \\| 'slide-out-left' \\| 'slide-out-top' \\| 'slide-out-bottom' \\| 'fade-out' \\| 'zoom-in' \\| 'zoom-fade-in' \\| 'pop-out' |\n| animationDuration | number | 否 |  窗口关闭动画的持续时间，单位为 ms |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[navigateBack](http://uniapp.dcloud.io/api/router?id=navigateback)\n"
  },
  "createSelectorQuery": {
    "name": "## uni.createSelectorQuery() @createselectorquery",
    "description": "\r\n返回一个SelectorQuery对象实例\r\n",
    "param": "",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [SelectorQuery](#selectorquery) | \n\n#### SelectorQuery @selectorquery \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| in | (any) => [SelectorQuery](#selectorquery) | 是 |  将选择器的选取范围更改为自定义组件component内 |\n| select | (string) => [NodesRef](#nodesref) | 是 |  在当前页面下选择第一个匹配选择器selector的节点 |\n| selectAll | (string) => [NodesRef](#nodesref) | 是 |  在当前页面下选择匹配选择器selector的所有节点 |\n| selectViewport | () => [NodesRef](#nodesref) | 是 |  选择显示区域 |\n| exec | ((Array\\<any\\>) => void) => [NodesRef](#nodesref) | 是 |  执行所有的请求 |\n",
    "compatibility": "",
    "tutorial": "\n### 参见\n[createSelectorQuery](http://uniapp.dcloud.io/api/ui/nodes-info?id=createselectorquery)\n"
  },
  "loadFontFace": {
    "name": "## uni.loadFontFace(options) @loadfontface",
    "description": "\r\n动态加载网络字体\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [LoadFontFaceOptions](#loadfontfaceoptions) | 是 | - |\n#### LoadFontFaceOptions @loadfontfaceoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| global | boolean | 否 |  是否全局生效 |\n| family | string | 是 |  定义的字体名称 |\n| source | string | 是 |  字体资源的地址。建议格式为 TTF 和 WOFF，WOFF2 在低版本的iOS上会不兼容。 |\n| desc | [LoadFontFaceOptionDesc](#loadfontfaceoptiondesc) | 否 | - |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### LoadFontFaceOptionDesc @loadfontfaceoptiondesc \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| style | string | 是 | - |\n| weight | string | 是 | - |\n| variant | string | 是 | - |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[loadFontFace](http://uniapp.dcloud.io/api/ui/font?id=loadfontface)\n"
  },
  "pageScrollTo": {
    "name": "## uni.pageScrollTo(options) @pagescrollto",
    "description": "\r\n将页面滚动到目标位置\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [PageScrollToOptions](#pagescrolltooptions) | 是 | - |\n#### PageScrollToOptions @pagescrolltooptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| scrollTop | number | 是 |  滚动到页面的目标位置 |\n| selector | string | 是 |  选择器 |\n| offsetTop | number | 是 |  偏移距离，可以滚动到 selector 加偏移距离的位置 |\n| duration | number | 是 |  滚动动画的时长 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 是 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 是 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 是 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[pageScrollTo](http://uniapp.dcloud.io/api/ui/scroll?id=pagescrollto)\n"
  },
  "stopPullDownRefresh": {
    "name": "## uni.stopPullDownRefresh() @stoppulldownrefresh",
    "description": "\r\n停止当前页面下拉刷新\r\n",
    "param": "",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[stopPullDownRefresh](http://uniapp.dcloud.io/api/ui/pulldown?id=stoppulldownrefresh)\n"
  },
  "setNavigationBarColor": {
    "name": "## uni.setNavigationBarColor(options) @setnavigationbarcolor",
    "description": "\r\n设置导航条颜色\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [SetNavigationBarColorOptions](#setnavigationbarcoloroptions) | 是 | - |\n#### SetNavigationBarColorOptions @setnavigationbarcoloroptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| frontColor | string | 是 |  前景颜色值，包括按钮、标题、状态栏的颜色 |\n| backgroundColor | string | 是 |  背景颜色值，有效值为十六进制颜色 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[setNavigationBarColor](http://uniapp.dcloud.io/api/ui/navigationbar?id=setnavigationbarcolor)\n"
  },
  "setTabBarBadge": {
    "name": "## uni.setTabBarBadge(options) @settabbarbadge",
    "description": "\r\n为 tabBar 某一项的右上角添加文本\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [SetTabBarBadgeOptions](#settabbarbadgeoptions) | 是 | - |\n#### SetTabBarBadgeOptions @settabbarbadgeoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| index | number | 是 |  tabBar的哪一项，从左边算起，索引从0开始 |\n| text | string | 是 |  显示的文本，不超过 3 个半角字符 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[setTabBarBadge](http://uniapp.dcloud.io/api/ui/tabbar?id=settabbarbadge)\n"
  },
  "removeTabBarBadge": {
    "name": "## uni.removeTabBarBadge(options) @removetabbarbadge",
    "description": "\r\n移除 tabBar 某一项右上角的文本\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [RemoveTabBarBadgeOptions](#removetabbarbadgeoptions) | 是 | - |\n#### RemoveTabBarBadgeOptions @removetabbarbadgeoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| index | number | 是 |  tabBar的哪一项，从左边算起，索引从0开始 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[removeTabBarBadge](http://uniapp.dcloud.io/api/ui/tabbar?id=removetabbarbadge)\n"
  },
  "setTabBarItem": {
    "name": "## uni.setTabBarItem(options) @settabbaritem",
    "description": "\r\n动态设置 tabBar 某一项的内容\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [SetTabBarItemOptions](#settabbaritemoptions) | 是 | - |\n#### SetTabBarItemOptions @settabbaritemoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| index | number | 是 |  tabBar 的哪一项，从左边算起，索引从0开始 |\n| text | string | 否 |  tab 上按钮文字 |\n| iconPath | string | 否 |  图片路径 |\n| selectedIconPath | string | 否 |  选中时的图片路径 |\n| pagePath | string | 否 |  页面绝对路径 |\n| iconfont | [SetTabBarItemIconFontOptions](#settabbaritemiconfontoptions) | 否 |  字体图标，优先级高于 iconPath |\n| visible | boolean | 否 |  tab 是否显示 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### SetTabBarItemIconFontOptions @settabbaritemiconfontoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| text | string | 是 |  字库 Unicode 码 |\n| selectedText | string | 是 |  选中后字库 Unicode 码 |\n| fontSize | string | 否 |  字体图标字号(px) |\n| color | string | 否 |  字体图标颜色 |\n| selectedColor | string | 否 |  字体图标选中颜色 |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[setTabBarItem](http://uniapp.dcloud.io/api/ui/tabbar?id=settabbaritem)\n"
  },
  "setTabBarStyle": {
    "name": "## uni.setTabBarStyle(options) @settabbarstyle",
    "description": "\r\n动态设置 tabBar 的整体样式\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [SetTabBarStyleOptions](#settabbarstyleoptions) | 是 | - |\n#### SetTabBarStyleOptions @settabbarstyleoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| color | string | 否 |  tab 上的文字默认颜色 |\n| selectedColor | string | 否 |  tab 上的文字选中时的颜色 {HBuilderX.ColorString} |\n| backgroundColor | string | 否 |  tab 的背景色 |\n| backgroundImage | string | 否 |  图片背景 |\n| backgroundRepeat | string | 否 |  背景图平铺方式 |\n| borderStyle | string | 否 |  tabbar上边框的颜色 |\n| midButton | [MidButtonOptions](#midbuttonoptions) | 否 |  tabbar 中间按钮 仅在 list 项为偶数时有效 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### MidButtonOptions @midbuttonoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| width | string | 否 |  中间按钮的宽度，tabBar 其它项为减去此宽度后平分，默认值为与其它项平分宽度。默认 80px |\n| height | string | 否 |  中间按钮的高度，可以大于 tabBar 高度，达到中间凸起的效果。默认 50px |\n| text | string | 否 |  中间按钮的文字 |\n| iconPath | string | 否 |  中间按钮的图片路径 |\n| iconWidth | string | 否 |  图片宽度（高度等比例缩放）。默认 24px |\n| backgroundImage | string | 否 |  中间按钮的背景图片路径 |\n| iconfont | [MidButtonIconFont](#midbuttoniconfont) | 否 |  字体图标，优先级高于 iconPath |\n\n###### MidButtonIconFont @midbuttoniconfont \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| text | string | 否 |  字库 Unicode 码 |\n| selectedText | string | 否 |  选中后字库 Unicode 码 |\n| fontSize | string | 否 |  字体图标字号(px) |\n| color | string | 否 |  字体图标颜色 |\n| selectedColor | string | 否 |  字体图标选中颜色 |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[setTabBarStyle](http://uniapp.dcloud.io/api/ui/tabbar?id=settabbarstyle)\n"
  },
  "hideTabBar": {
    "name": "## uni.hideTabBar(options?) @hidetabbar",
    "description": "\r\n隐藏 tabBar\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [HideTabBarOptions](#hidetabbaroptions) | 否 | - |\n#### HideTabBarOptions @hidetabbaroptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| animation | boolean | 否 |  是否需要动画效果 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[hideTabBar](http://uniapp.dcloud.io/api/ui/tabbar?id=hidetabbar)\n"
  },
  "showTabBar": {
    "name": "## uni.showTabBar(options?) @showtabbar",
    "description": "\r\n显示 tabBar\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ShowTabBarOptions](#showtabbaroptions) | 否 | - |\n#### ShowTabBarOptions @showtabbaroptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| animation | boolean | 否 |  是否需要动画效果 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[showTabBar](http://uniapp.dcloud.io/api/ui/tabbar?id=showtabbar)\n"
  },
  "showTabBarRedDot": {
    "name": "## uni.showTabBarRedDot(options) @showtabbarreddot",
    "description": "\r\n显示 tabBar 某一项的右上角的红点\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ShowTabBarRedDotOptions](#showtabbarreddotoptions) | 是 | - |\n#### ShowTabBarRedDotOptions @showtabbarreddotoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| index | number | 是 |  tabBar的哪一项，从左边算起，索引从0开始 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[showTabBarRedDot](http://uniapp.dcloud.io/api/ui/tabbar?id=showtabbarreddot)\n"
  },
  "hideTabBarRedDot": {
    "name": "## uni.hideTabBarRedDot(options) @hidetabbarreddot",
    "description": "\r\n隐藏 tabBar 某一项的右上角的红点\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [HideTabBarRedDotOptions](#hidetabbarreddotoptions) | 是 | - |\n#### HideTabBarRedDotOptions @hidetabbarreddotoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| index | number | 是 |  tabBar的哪一项，从左边算起，索引从0开始 |\n| success | ([AsyncApiSuccessResult](#asyncapisuccessresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([AsyncApiResult](#asyncapiresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "",
    "tutorial": "\n### 参见\n[hideTabBarRedDot](http://uniapp.dcloud.io/api/ui/tabbar?id=hidetabbarreddot)\n"
  },
  "exit": {
    "name": "## uni.exit(options?) @exit",
    "description": "\r\n退出当前应用",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ExitOptions](#exitoptions) | 否 | - |\n#### ExitOptions @exitoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| success | ([ExitSuccess](#exitsuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### ExitSuccess @exitsuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errMsg | string | 是 | - |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 3.8.15 | 3.9.0 | x | x | x |\n",
    "tutorial": ""
  },
  "getAppAuthorizeSetting": {
    "name": "## uni.getAppAuthorizeSetting() @getappauthorizesetting",
    "description": "获取 APP 授权设置。",
    "param": "",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [GetAppAuthorizeSettingResult](#getappauthorizesettingresult) | \n\n#### GetAppAuthorizeSettingResult @getappauthorizesettingresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| albumAuthorized | string | 是 |  允许 App 使用相册的开关（仅 iOS 支持） - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） |\n| bluetoothAuthorized | string | 是 |  允许 App 使用蓝牙的开关（仅 iOS 支持） - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） - config error: Android平台没有该值；iOS平台：表示没有在 `manifest.json -\\> App模块配置` 中配置 `BlueTooth(低功耗蓝牙)` 模块 |\n| cameraAuthorized | string | 是 |  允许 App 使用摄像头的开关 - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） - config error: Android平台：表示没有授予 `android.permission.CAMERA` 权限；iOS平台没有该值 |\n| locationAuthorized | string | 是 |  允许 App 使用定位的开关 - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） - config error: Android平台：表示没有授予 `android.permission.ACCESS_COARSE_LOCATION` 权限；iOS平台：表示没有在 `manifest.json -\\> App模块配置` 中配置 `Geolocation(定位)` 模块 |\n| locationAccuracy | string | 是 |  定位准确度。true 表示模糊定位，false 表示精确定位（仅 iOS 支持） - reduced: 模糊定位 - full: 精准定位 - unsupported: 不支持（包括用户拒绝定位权限和没有在 `manifest.json -\\> App模块配置` 中配置 `Geolocation(定位)` 模块） |\n| locationReducedAccuracy | boolean | 是 |  定位准确度（推荐使用 locationAccuracy 属性）。true 表示模糊定位，false 表示精确定位（仅 iOS 支持） |\n| microphoneAuthorized | string | 是 |  允许 App 使用麦克风的开关 - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） - config error: Android平台：表示没有授予 `android.permission.RECORD_AUDIO` 权限；iOS平台没有该值 |\n| notificationAuthorized | string | 是 |  允许 App 通知的开关 - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） - config error: Android平台没有该值；iOS平台：表示没有在 `manifest.json -\\> App模块配置` 中配置 `Push(推送)` 模块 |\n| notificationAlertAuthorized | string | 是 |  允许 App 通知带有提醒的开关（仅 iOS 10.0+ 支持） - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） - config error: 没有在 `manifest.json -\\> App模块配置` 中配置 `Push(推送)` 模块 |\n| notificationBadgeAuthorized | string | 是 |  允许 App 通知带有标记的开关（仅 iOS 10.0+ 支持） - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） - config error: 没有在 `manifest.json -\\> App模块配置` 中配置 `Push(推送)` 模块 |\n| notificationSoundAuthorized | string | 是 |  允许 App 通知带有声音的开关（仅 iOS 10.0+ 支持） - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） - config error: 没有在 `manifest.json -\\> App模块配置` 中配置 `Push(推送)` 模块 |\n| phoneCalendarAuthorized | string | 是 |  允许读写日历的开关（仅微信小程序支持） - authorized: 已经获得授权，无需再次请求授权 - denied: 请求授权被拒绝，无法再次请求授权；（此情况需要引导用户打开系统设置，在设置页中打开权限） - not determined: 尚未请求授权，会在App下一次调用系统相应权限时请求；（仅 iOS 会出现。此种情况下引导用户打开系统设置，不展示开关） |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getAppAuthorizeSetting](http://uniapp.dcloud.io/api/system/getappauthorizesetting)\n"
  },
  "getAppBaseInfo": {
    "name": "## uni.getAppBaseInfo(config?) @getappbaseinfo",
    "description": "获取app基本信息",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| config | [GetAppBaseInfoOptions](#getappbaseinfooptions) | 否 | - |\n#### GetAppBaseInfoOptions @getappbaseinfooptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| filter | Array\\<string\\> | 是 | - |\n",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [GetAppBaseInfoResult](#getappbaseinforesult) | \n\n#### GetAppBaseInfoResult @getappbaseinforesult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| appId | string | 否 |  manifest.json 中应用appid，即DCloud appid。\t |\n| appName | string | 否 |  manifest.json 中应用名称\t |\n| appVersion | string | 否 |  manifest.json 中应用版本名称。\t |\n| appVersionCode | string | 否 |  manifest.json 中应用版本名号。\t |\n| appLanguage | string | 否 |  应用设置的语言en、zh-Hans、zh-Hant、fr、es\t |\n| language | string | 否 |  应用设置的语言\t |\n| version | string | 否 |  引擎版本号 |\n| appWgtVersion | string | 否 |  应用资源（wgt）的版本名称。\t |\n| hostLanguage | string | 否 |  小程序宿主语言\t |\n| hostVersion | string | 否 |  App、小程序宿主版本。 |\n| hostName | string | 否 |  小程序宿主名称\t |\n| hostPackageName | string | 否 |  小程序宿主包名\t |\n| hostSDKVersion | string | 否 |  uni小程序SDK版本、小程序客户端基础库版本\t |\n| hostTheme | string | 否 |  系统当前主题，取值为light或dark。微信小程序全局配置\"darkmode\":true时才能获取，否则为 null （不支持小游戏） |\n| isUniAppX | boolean | 是 |  是否uni-app x |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getAppBaseInfo](https://uniapp.dcloud.net.cn/api/system/getAppBaseInfo.html)\n"
  },
  "getDeviceInfo": {
    "name": "## uni.getDeviceInfo(config?) @getdeviceinfo",
    "description": "获取设备信息",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| config | [GetDeviceInfoOptions](#getdeviceinfooptions) | 否 | - |\n#### GetDeviceInfoOptions @getdeviceinfooptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| filter | Array\\<string\\> | 是 | - |\n",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [GetDeviceInfoResult](#getdeviceinforesult) | \n\n#### GetDeviceInfoResult @getdeviceinforesult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| brand | string | 否 |  设备品牌 |\n| deviceBrand | string | 否 |  设备品牌 |\n| deviceId | string | 否 |  设备 id 。由 uni-app 框架生成并存储，清空 Storage 会导致改变 |\n| model | string | 否 |  设备型号\t |\n| deviceModel | string | 否 |  设备型号\t |\n| deviceType | string | 否 |  设备类型phone、pad、pc\t |\n| deviceOrientation | string | 否 |  设备方向 竖屏 portrait、横屏 landscape\t |\n| devicePixelRatio | string | 否 |  设备像素比\t |\n| system | string | 否 |  操作系统及版本\t |\n| platform | string | 否 |  客户端平台\t |\n| oaid | string | 否 |  oaid标识 Android专有 |\n| isRoot | boolean | 否 |  是否root |\n| isSimulator | boolean | 否 |  是否是模拟器 |\n| isUSBDebugging | boolean | 否 |  adb是否开启 |\n| idfa | string | 否 |  idfa标识 iOS专有 |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getDeviceInfo](https://uniapp.dcloud.net.cn/api/system/getDeviceInfo.html)\n"
  },
  "getLocation": {
    "name": "## uni.getLocation(options) @getlocation",
    "description": "获取当前的地理位置、速度",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [GetLocationOptions](#getlocationoptions) | 是 | - |\n#### GetLocationOptions @getlocationoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| type | string | 否 |  默认为 wgs84 返回 gps 坐标，gcj02 返回可用于uni.openLocation的坐标 |\n| altitude | boolean | 否 |  传入 true 会返回高度信息，由于获取高度需要较高精确度，会减慢接口返回速度 |\n| geocode | boolean | 否 |  传入 true 会解析地址 |\n| highAccuracyExpireTime | number | 否 |  高精度定位超时时间(ms)，指定时间内返回最高精度，该值3000ms以上高精度定位才有效果 |\n| isHighAccuracy | boolean | 否 |  开启高精度定位 |\n| success | ([GetLocationSuccess](#getlocationsuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### GetLocationSuccess @getlocationsuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| latitude | number | 是 |  纬度，浮点数，范围为-90~90，负数表示南纬 |\n| longitude | number | 是 |  经度，范围为-180~180，负数表示西经 |\n| speed | number | 是 |  速度，浮点数，单位m/s |\n| accuracy | number | 是 |  位置的精确度 |\n| altitude | number | 是 |  高度，单位 m |\n| verticalAccuracy | number | 是 |  垂直精度，单位 m（Android 无法获取，返回 0） |\n| horizontalAccuracy | number | 是 |  水平精度，单位 m |\n| address | any | 是 |  地址信息 |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | √ | 3.9.0 | x | x | x |\n",
    "tutorial": "\n### 参见\n[getLocation]([](http://uniapp.dcloud.io/api/location/location?id=getlocation))\n"
  },
  "getNetworkType": {
    "name": "## uni.getNetworkType(options) @getnetworktype",
    "description": "获取网络类型",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [GetNetworkTypeOptions](#getnetworktypeoptions) | 是 | - |\n#### GetNetworkTypeOptions @getnetworktypeoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| success | ([GetNetworkTypeSuccess](#getnetworktypesuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### GetNetworkTypeSuccess @getnetworktypesuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| networkType | string | 是 |  网络类型 |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getNetworkType](http://uniapp.dcloud.io/api/system/network?id=getnetworktype)\n"
  },
  "getSystemInfo": {
    "name": "## uni.getSystemInfo(options) @getsysteminfo",
    "description": "异步获取系统信息",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [GetSystemInfoOptions](#getsysteminfooptions) | 是 | - |\n#### GetSystemInfoOptions @getsysteminfooptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| success | ([GetSystemInfoResult](#getsysteminforesult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### GetSystemInfoResult @getsysteminforesult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| SDKVersion | string | 是 |  客户端基础库版本 |\n| appId | string | 是 |  `manifest.json` 中应用appid。 |\n| appLanguage | string | 是 |  应用设置的语言。仅 App、H5 支持 |\n| appName | string | 是 |  `manifest.json` 中应用名称。和`字节跳动小程序、飞书小程序`字段冲突，原字端与`hostName`一致 |\n| appVersion | string | 是 |  `manifest.json` 中应用版本名称。 |\n| appVersionCode | number | 是 |  `manifest.json` 中应用版本名号 |\n| appWgtVersion | string | 是 |  应用资源（wgt）的版本名称。（仅 App 支持） |\n| brand | string | 是 |  手机品牌。H5 不支持 |\n| browserName | string | 是 |  浏览器名称。`App` 端是系统 webview 的名字，比如 wkwebview、chrome。小程序端为空 |\n| browserVersion | string | 是 |  浏览器版本、webview 版本。小程序端为空 |\n| deviceId | string | 是 |  设备 ID |\n| deviceBrand | string | 是 |  设备品牌。如：`apple`、`huawei`。H5 不支持 |\n| deviceModel | string | 是 |  设备型号 |\n| deviceType | string | 是 |  设备类型。`phone`、`pad`、`pc` |\n| devicePixelRatio | number | 是 |  设备像素比 |\n| deviceOrientation | string | 是 |  设备方向。如：`竖屏 portrait`、`横屏 landscape` - portrait: 竖屏 - landscape: 横屏 |\n| language | string | 是 |  程序设置的语言 |\n| model | string | 是 |  手机型号 |\n| osName | string | 是 |  ios、android、windows、mac、linux |\n| osVersion | string | 是 |  操作系统版本。如 ios 版本，andriod 版本 |\n| osLanguage | string | 是 |  操作系统语言，小程序端与 `version` 相同，H5 与浏览器语言一致 |\n| osTheme | string | 是 |  \\|操作系统主题 light、dark。小程序端为小程序主题，H5 端为空 |\n| pixelRatio | number | 是 |  设备像素比 |\n| platform | string | 是 |  客户端平台 |\n| screenWidth | number | 是 |  屏幕宽度 |\n| screenHeight | number | 是 |  屏幕高度 |\n| statusBarHeight | number | 是 |  状态栏的高度 |\n| system | string | 是 |  操作系统版本 |\n| safeArea | [SafeArea](#safearea) | 是 |  在竖屏正方向下的安全区域 |\n| safeAreaInsets | [SafeAreaInsets](#safeareainsets) | 是 |  在竖屏正方向下的安全区域插入位置 |\n| ua | string | 是 |  用户标识。小程序端为空 |\n| uniCompileVersion | string | 是 |  uni 编译器版本号 |\n| uniPlatform | string | 是 |  uni-app 运行平台。如：`app`、`mp-weixin`、`web` |\n| uniRuntimeVersion | string | 是 |  uni 运行时版本 |\n| version | string | 是 |  引擎版本号 |\n| romName | string | 是 |  rom 名称。Android 部分机型获取不到值。iOS 恒为 `ios` |\n| romVersion | string | 是 |  rom 版本号。Android 部分机型获取不到值。iOS 恒为 `ios 版本号` |\n| windowWidth | number | 是 |  可使用窗口宽度 |\n| windowHeight | number | 是 |  可使用窗口高度 |\n| windowTop | number | 是 |  可使用窗口的顶部位置 |\n| windowBottom | number | 是 |  可使用窗口的底部位置 |\n| oaid | string | 是 |  oaid |\n| osAndroidAPILevel | number | 是 |  Android 系统API库的版本。 |\n\n###### SafeArea @safearea \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| left | number | 是 |  安全区域左上角横坐标 |\n| right | number | 是 |  安全区域右下角横坐标 |\n| top | number | 是 |  安全区域左上角纵坐标 |\n| bottom | number | 是 |  安全区域右下角纵坐标 |\n| width | number | 是 |  安全区域的宽度，单位逻辑像素 |\n| height | number | 是 |  安全区域的高度，单位逻辑像素 |\n\n###### SafeAreaInsets @safeareainsets \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| left | number | 是 |  安全区域左侧插入位置 |\n| right | number | 是 |  安全区域右侧插入位置 |\n| top | number | 是 |  安全区顶部插入位置 |\n| bottom | number | 是 |  安全区域底部插入位置 |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getSystemInfo](http://uniapp.dcloud.io/api/system/info?id=getsysteminfo)\n"
  },
  "getSystemInfoSync": {
    "name": "## uni.getSystemInfoSync() @getsysteminfosync",
    "description": "同步获取系统信息",
    "param": "",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [GetSystemInfoResult](#getsysteminforesult) | \n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getSystemInfoSync](http://uniapp.dcloud.io/api/system/info?id=getsysteminfosync)\n"
  },
  "getWindowInfo": {
    "name": "## uni.getWindowInfo() @getwindowinfo",
    "description": "同步获取窗口信息",
    "param": "",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [GetWindowInfoResult](#getwindowinforesult) | \n\n#### GetWindowInfoResult @getwindowinforesult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| pixelRatio | number | 是 |  设备像素比 |\n| screenWidth | number | 是 |  屏幕宽度 |\n| screenHeight | number | 是 |  屏幕高度 |\n| windowWidth | number | 是 |  可使用窗口宽度 |\n| windowHeight | number | 是 |  可使用窗口高度 |\n| statusBarHeight | number | 是 |  状态栏的高度 |\n| windowTop | number | 是 |  可使用窗口的顶部位置 |\n| windowBottom | number | 是 |  可使用窗口的底部位置 |\n| safeArea | [SafeArea](#safearea) | 是 |  在竖屏正方向下的安全区域 |\n| safeAreaInsets | [SafeAreaInsets](#safeareainsets) | 是 |  在竖屏正方向下的安全区域插入位置 |\n| screenTop | number | 是 |  窗口上边缘的 y 值 |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getWindowInfo](http://uniapp.dcloud.io/api/system/getWindowInfo.html)\n"
  },
  "getSystemSetting": {
    "name": "## uni.getSystemSetting() @getsystemsetting",
    "description": "获取系统设置",
    "param": "",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [GetSystemSettingResult](#getsystemsettingresult) | \n\n#### GetSystemSettingResult @getsystemsettingresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| bluetoothEnabled | boolean | 否 |  蓝牙是否开启 |\n| bluetoothError | string | 否 |  蓝牙的报错信息 |\n| locationEnabled | boolean | 否 |  位置是否开启 |\n| wifiEnabled | boolean | 否 |  wifi是否开启 |\n| wifiError | string | 否 |  wifi的报错信息 |\n| deviceOrientation | string | 否 |  设备方向 |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getSystemSetting](https://uniapp.dcloud.net.cn/api/system/getsystemsetting.html)\n"
  },
  "chooseImage": {
    "name": "## uni.chooseImage(options) @chooseimage",
    "description": "从本地相册选择图片或使用相机拍照",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ChooseImageOptions](#chooseimageoptions) | 是 | - |\n#### ChooseImageOptions @chooseimageoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| count | number | 否 |  最多可以选择的图片张数，默认9 |\n| sizeType | Array\\<string\\> | 否 |  original 原图，compressed 压缩图，默认二者都有 |\n| sourceType | Array\\<string\\> | 否 |  album 从相册选图，camera 使用相机，默认二者都有 |\n| extension | Array\\<string\\> | 否 |  根据文件拓展名过滤，每一项都不能是空字符串。默认不过滤。 |\n| crop | [ChooseImageCropOptions](#chooseimagecropoptions) | 否 |  图像裁剪参数，设置后 sizeType 失效。 |\n| success | ([ChooseImageSuccessCallback](#chooseimagesuccesscallback)) => void | 否 |  成功则返回图片的本地文件路径列表 tempFilePaths |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### ChooseImageCropOptions @chooseimagecropoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| width | number | 是 |  裁剪的宽度，单位为px，用于计算裁剪宽高比。 |\n| height | number | 是 |  裁剪的高度，单位为px，用于计算裁剪宽高比。 |\n| quality | number | 是 |  取值范围为1-100，数值越小，质量越低（仅对jpg格式有效）。默认值为80。 |\n| resize | boolean | 是 |  是否将width和height作为裁剪保存图片真实的像素值。默认值为true。注：设置为false时在裁剪编辑界面显示图片的像素值，设置为true时不显示。 |\n| saveToAlbum | boolean | 是 |  是否将裁剪的图片保存到手机相册里，默认值为false。 |\n\n##### ChooseImageSuccessCallback @chooseimagesuccesscallback \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errSubject | string | 是 |  调用API的名称 |\n| errMsg | string | 是 | - |\n| tempFilePaths | Array\\<string\\> | 是 | - |\n| tempFiles | any | 是 | - |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | - | - | - |\n",
    "tutorial": "\n### 参见\n[chooseImage](http://uniapp.dcloud.io/api/media/image?id=chooseimage)\n"
  },
  "previewImage": {
    "name": "## uni.previewImage(options) @previewimage",
    "description": "预览图片",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [PreviewImageOptions](#previewimageoptions) | 是 | - |\n#### PreviewImageOptions @previewimageoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| count | string | 否 |  当前显示图片的链接，不填则默认为 urls 的第一张 |\n| current | any | 否 |  current 为当前显示图片的链接/索引值，不填或填写的值无效则为 urls 的第一张。App平台在 1.9.5至1.9.8之间，current为必填。不填会报错 |\n| urls | Array\\<string\\> | 是 |  需要预览的图片链接列表 |\n| indicator | string | 否 |  图片指示器样式 - default: 底部圆点指示器 - number: 顶部数字指示器 - none: 不显示指示器 |\n| loop | boolean | 否 |  是否可循环预览 |\n| longPressActions | [LongPressActionsOptions](#longpressactionsoptions) | 否 |  长按图片显示操作菜单，如不填默认为保存相册，1.9.5 起支持。 |\n| success | ([PreviewImageSuccessCallback](#previewimagesuccesscallback)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### LongPressActionsOptions @longpressactionsoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| itemList | Array\\<string\\> | 是 |  按钮的文字数组 |\n| itemColor | string | 是 |  按钮的文字颜色，字符串格式，默认为\"#000000\" |\n| success | ([LongPressActionsSuccessData](#longpressactionssuccessdata)) => void | 是 |  接口调用成功的回调函数 |\n| fail | (any) => void | 是 |  接口调用失败的回调函数 |\n| complete | (any) => void | 是 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n###### LongPressActionsSuccessData @longpressactionssuccessdata \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| tapIndex | number | 是 |  接口调用失败的回调函数 |\n| index | number | 是 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### PreviewImageSuccessCallback @previewimagesuccesscallback \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errSubject | string | 是 | - |\n| errMsg | string | 是 | - |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | - | - | - |\n",
    "tutorial": "\n### 参见\n[previewImage](http://uniapp.dcloud.io/api/media/image?id=previewimage)\n"
  },
  "closePreviewImage": {
    "name": "## uni.closePreviewImage(options) @closepreviewimage",
    "description": "关闭图片预览",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ClosePreviewImageOptions](#closepreviewimageoptions) | 是 | - |\n#### ClosePreviewImageOptions @closepreviewimageoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| success | ([ClosePreviewImageSuccessCallback](#closepreviewimagesuccesscallback)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### ClosePreviewImageSuccessCallback @closepreviewimagesuccesscallback \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errMsg | string | 是 |  错误信息 |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | - | - | - |\n",
    "tutorial": "\n### 参见\n[closePreviewImage](http://uniapp.dcloud.io/api/media/image?id=closepreviewimage)\n"
  },
  "request": {
    "name": "## uni.request(param) @request",
    "description": "发起网络请求。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| param | [RequestOptions\\<T\\>](#requestoptions) | 是 |  网络请求参数 |\n#### RequestOptions\\<T\\> @requestoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| url | string | 是 |  开发者服务器接口地址 |\n| data | any | 否 |  请求的参数 Object\\|String类型 |\n| header | [UTSJSONObject](#utsjsonobject) | 否 |  设置请求的 header，header 中不能设置 Referer |\n| method | string | 否 |  请求类型 默认值GET\t GET\\|POST\\|PUT\\|DELETE\\|HEAD\\|OPTIONS |\n| timeout | number | 否 |  超时时间，单位 ms |\n| dataType | string | 否 |  如果设为 json，会对返回的数据进行一次 JSON.parse，非 json 不会进行 JSON.parse |\n| responseType | string | 否 |  设置响应的数据类型。  |\n| sslVerify | boolean | 否 |  验证 ssl 证书 |\n| withCredentials | boolean | 否 |  跨域请求时是否携带凭证（cookies） |\n| firstIpv4 | boolean | 否 |  DNS解析时优先使用ipv4 |\n| success | ([RequestSuccess\\<T\\>](#requestsuccess)) => void | 否 |  网络请求成功回调。 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  网络请求失败回调。 |\n| complete | (any) => void | 否 |  网络请求完成回调，成功或者失败都会调用。 |\n\n##### UTSJSONObject @utsjsonobject \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| getAny | (string) => any | 是 |  获取一个 属性，返回类型是any 或者 null |\n| getBoolean | (string) => boolean | 是 |  获取一个Boolean属性，返回类型是Boolean 或者 null |\n| getNumber | (string) => number | 是 |  获取一个number属性，返回类型是number 或者 null |\n| getString | (string) => string | 是 |  获取一个string属性，返回类型是string 或者 null |\n| getJSON | (string) => [UTSJSONObject](#utsjsonobject) | 是 |  获取一个UTSJSONObject属性，返回类型是UTSJSONObject 或者 null |\n| getArray | (string) => Array\\<any\\> | 是 |  获取一个Array属性，返回类型是Array 或者 null |\n| toMap | () => Map\\<string, any\\> | 是 |  将当前 UTSJSONObject 实例转换为 Map 实例。 |\n\n##### RequestSuccess\\<T\\> @requestsuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| data | any | 是 |  开发者服务器返回的数据 |\n| statusCode | number | 是 |  开发者服务器返回的 HTTP 状态码 |\n| header | any | 是 |  开发者服务器返回的 HTTP Response Header |\n| cookies | Array\\<string\\> | 是 |  开发者服务器返回的 cookies，格式为字符串数组 |\n",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [RequestTask](#requesttask) | \n\n#### RequestTask @requesttask \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| abort | () => void | 是 | 中断网络请求。 |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[request](https://uniapp.dcloud.net.cn/api/request/request.html)\n"
  },
  "uploadFile": {
    "name": "## uni.uploadFile(options) @uploadfile",
    "description": "将本地资源上传到开发者服务器。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [UploadFileOptions](#uploadfileoptions) | 是 | - |\n#### UploadFileOptions @uploadfileoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| url | string | 是 |  开发者服务器 url |\n| filePath | string | 否 |  要上传文件资源的路径 |\n| name | string | 否 |  文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容 |\n| files | Array\\<[UploadFileOptionFiles](#uploadfileoptionfiles)\\> | 否 |  需要上传的文件列表。 |\n| header | [UTSJSONObject](#utsjsonobject) | 否 |  HTTP 请求 Header, header 中不能设置 Referer |\n| formData | [UTSJSONObject](#utsjsonobject) | 否 |  HTTP 请求中其他额外的 form data |\n| timeout | number | 否 |  超时时间，单位 ms |\n| success | ([UploadFileSuccess](#uploadfilesuccess)) => void | 否 |  成功返回的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  失败的回调函数 |\n| complete | (any) => void | 否 |  结束的回调函数（调用成功、失败都会执行） |\n\n##### UploadFileOptionFiles @uploadfileoptionfiles \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| name | string | 是 |  multipart 提交时，表单的项目名，默认为 file，如果 name 不填或填的值相同，可能导致服务端读取文件时只能读取到一个文件。 |\n| uri | string | 是 |  要上传文件资源的路径 |\n| file | any | 是 |  要上传的文件对象，仅H5（2.6.15+）支持 |\n\n##### UploadFileSuccess @uploadfilesuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| data | string | 是 |  开发者服务器返回的数据 |\n| statusCode | number | 是 |  开发者服务器返回的 HTTP 状态码 |\n",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [UploadTask](#uploadtask) | \n\n#### UploadTask @uploadtask \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| abort | () => void | 是 | 中断上传任务。 |\n| onProgressUpdate | (([OnProgressUpdateResult](#onprogressupdateresult)) => void) => void | 是 | 监听上传进度变化。 |\n\n##### OnProgressUpdateResult @onprogressupdateresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| progress | number | 是 |  上传进度百分比 |\n| totalBytesSent | number | 是 |  已经上传的数据长度，单位 Bytes |\n| totalBytesExpectedToSend | number | 是 |  预期需要上传的数据总长度，单位 Bytes |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[uploadFile](https://uniapp.dcloud.net.cn/api/request/network-file.html#uploadfile)\n"
  },
  "downloadFile": {
    "name": "## uni.downloadFile(options) @downloadfile",
    "description": "下载文件资源到本地，客户端直接发起一个 HTTP GET 请求，返回文件的本地临时路径。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [DownloadFileOptions](#downloadfileoptions) | 是 | - |\n#### DownloadFileOptions @downloadfileoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| url | string | 是 |  下载资源的 url |\n| header | [UTSJSONObject](#utsjsonobject) | 否 |  HTTP 请求 Header，header 中不能设置 Referer |\n| timeout | number | 否 |  超时时间，单位 ms |\n| success | ([DownloadFileSuccess](#downloadfilesuccess)) => void | 否 |  下载成功后以 tempFilePath 的形式传给页面，res = {tempFilePath: '文件的临时路径'} |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  失败的回调函数 |\n| complete | (any) => void | 否 |  结束的回调函数（调用成功、失败都会执行） |\n\n##### DownloadFileSuccess @downloadfilesuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| tempFilePath | string | 是 |  临时文件路径，下载后的文件会存储到一个临时文件 |\n| statusCode | number | 是 |  开发者服务器返回的 HTTP 状态码 |\n",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [DownloadTask](#downloadtask) | \n\n#### DownloadTask @downloadtask \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| abort | () => void | 是 | 中断下载任务。 |\n| onProgressUpdate | (([OnProgressDownloadResult](#onprogressdownloadresult)) => void) => void | 是 | 监听下载进度变化。 |\n\n##### OnProgressDownloadResult @onprogressdownloadresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| progress | number | 是 |  下载进度百分比 |\n| totalBytesWritten | number | 是 |  已经下载的数据长度，单位 Bytes |\n| totalBytesExpectedToWrite | number | 是 |  预期需要下载的数据总长度，单位 Bytes |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[downloadFile](https://uniapp.dcloud.net.cn/api/request/network-file.html#downloadfile)\n"
  },
  "showToast": {
    "name": "## uni.showToast(options) @showtoast",
    "description": "\r\nuni.showToast函数定义\r\n弹出toast  \r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ShowToastOptions](#showtoastoptions) | 是 |  uni.showToast参数定义 |\n#### ShowToastOptions @showtoastoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| title | string | 是 |  提示的内容，长度与 icon 取值有关。 |\n| icon | string | 否 | icon值说明 success: 显示成功图标，error: 显示错误图标； fail: 显示错误图标，此时title文本无长度显示； exception: 显示异常图标，此时title文本无长度显示； loading: 显示加载图标；none: 不显示图标。 |\n| image | string | 否 |  自定义图标的本地路径（app端暂不支持gif） |\n| mask | boolean | 否 |  是否显示透明蒙层，防止触摸穿透，默认：false |\n| duration | number | 否 |  提示的延迟时间，单位毫秒，默认：1500 |\n| position | string | 否 | position值说明（仅App生效） top: 居上显示； center: 居中显示；bottom： 居底显示 |\n| success | ([ShowToastSuccess](#showtoastsuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[showToast](https://uniapp.dcloud.net.cn/api/ui/prompt.html#showtoast)\n"
  },
  "showLoading": {
    "name": "## uni.showLoading(options) @showloading",
    "description": "\r\nuni.showLoading函数定义\r\n弹出loading\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ShowLoadingOptions](#showloadingoptions) | 是 |  uni.showLoading参数定义 |\n#### ShowLoadingOptions @showloadingoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| title | string | 是 |  提示的内容，长度与 icon 取值有关。 |\n| mask | boolean | 否 |  是否显示透明蒙层，防止触摸穿透，默认：false |\n| success | ([ShowLoadingSuccess](#showloadingsuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[showLoading](https://uniapp.dcloud.net.cn/api/ui/prompt.html#showloading)\n"
  },
  "showModal": {
    "name": "## uni.showModal(options) @showmodal",
    "description": "\r\nuni.showModal 函数定义\r\n\r\n弹出modal\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ShowModalOptions](#showmodaloptions) | 是 |  uni.showModal 参数定义 |\n#### ShowModalOptions @showmodaloptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| title | string | 否 |  提示的标题 |\n| content | string | 否 |  提示的内容 |\n| showCancel | boolean | 否 |  |\n| cancelText | string | 否 |  取消按钮的文字，默认为\"取消\" |\n| cancelColor | string | 否 |  取消按钮的文字颜色，默认为\"#000000\" |\n| confirmText | string | 否 |  确定按钮的文字，默认为\"确定\" |\n| confirmColor | string | 否 |  确定按钮的文字颜色 |\n| editable | boolean | 否 |  |\n| placeholderText | string | 否 |  显示输入框时的提示文本 |\n| success | ([ShowModalSuccess](#showmodalsuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### ShowModalSuccess @showmodalsuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| confirm | boolean | 是 |  为 true 时，表示用户点击了确定按钮 |\n| cancel | boolean | 是 |  为 true 时，表示用户点击了取消（用于 Android 系统区分点击蒙层关闭还是点击取消按钮关闭） |\n| content | string | 是 |  editable 为 true 时，用户输入的文本 |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[showModal](https://uniapp.dcloud.net.cn/api/ui/prompt.html#showmodal)\n"
  },
  "setStorage": {
    "name": "## uni.setStorage(options) @setstorage",
    "description": "\r\nuni.setStorage函数定义\r\n将数据存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个异步接口。  \r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [SetStorageOptions](#setstorageoptions) | 是 |  uni.setStorage参数定义 |\n#### SetStorageOptions @setstorageoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| key | string | 是 |  本地缓存中的指定的 key |\n| data | any | 是 |  需要存储的内容，只支持原生类型、及能够通过 JSON.stringify 序列化的对象 |\n| success | ([SetStorageSuccess](#setstoragesuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[setStorage](https://uniapp.dcloud.net.cn/api/storage/storage.html#setstorage)\n"
  },
  "setStorageSync": {
    "name": "## uni.setStorageSync(key, data) @setstoragesync",
    "description": "\r\nuni.setStorageSync函数定义\r\n将 data 存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个同步接口。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| key | string | 是 | 本地缓存中的指定的 key |\n| data | any | 是 | 需要存储的内容，只支持原生类型、及能够通过 JSON.stringify 序列化的对象 |",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[setStorageSync](https://uniapp.dcloud.net.cn/api/storage/storage.html#setstoragesync)\n"
  },
  "getStorage": {
    "name": "## uni.getStorage(options) @getstorage",
    "description": "\r\nuni.getStorage函数定义\r\n从本地缓存中异步获取指定 key 对应的内容。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [GetStorageOptions](#getstorageoptions) | 是 |  uni.getStorage参数定义 |\n#### GetStorageOptions @getstorageoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| key | string | 是 |  本地缓存中的指定的 key |\n| success | ([GetStorageSuccess](#getstoragesuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### GetStorageSuccess @getstoragesuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| data | any | 是 |  key 对应的内容 |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getStorage](https://uniapp.dcloud.net.cn/api/storage/storage.html#getstorage)\n"
  },
  "getStorageSync": {
    "name": "## uni.getStorageSync(key) @getstoragesync",
    "description": "\r\nuni.getStorageSync函数定义\r\n从本地缓存中同步获取指定 key 对应的内容。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| key | string | 是 | 本地缓存中的指定的 key |",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| any | \n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getStorageSync](https://uniapp.dcloud.net.cn/api/storage/storage.html#getstoragesync)\n"
  },
  "getStorageInfo": {
    "name": "## uni.getStorageInfo(options) @getstorageinfo",
    "description": "\r\nuni.getStorageInfo函数定义\r\n异步获取当前 storage 的相关信息。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [GetStorageInfoOptions](#getstorageinfooptions) | 是 |  uni.getStorageInfo参数定义 |\n#### GetStorageInfoOptions @getstorageinfooptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| success | ([GetStorageInfoSuccess](#getstorageinfosuccess)) => void | 是 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 是 |  接口调用失败的回调函数 |\n| complete | (any) => void | 是 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### GetStorageInfoSuccess @getstorageinfosuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| keys | Array\\<string\\> | 是 |  当前 storage 中所有的 key |\n| currentSize | number | 是 |  当前占用的空间大小, 单位：kb |\n| limitSize | number | 是 |  限制的空间大小, 单位：kb |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getStorageInfo](https://uniapp.dcloud.net.cn/api/storage/storage.html#getstorageinfo)\n"
  },
  "getStorageInfoSync": {
    "name": "## uni.getStorageInfoSync() @getstorageinfosync",
    "description": "\r\nuni.getStorageInfoSync函数定义\r\n同步获取当前 storage 的相关信息。\r\n\r\n",
    "param": "",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [GetStorageInfoSuccess](#getstorageinfosuccess) | \n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[getStorageInfoSync](https://uniapp.dcloud.net.cn/api/storage/storage.html#getstorageinfosync)\n"
  },
  "removeStorage": {
    "name": "## uni.removeStorage(options) @removestorage",
    "description": "\r\nuni.removeStorage函数定义\r\n从本地缓存中异步移除指定 key。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [RemoveStorageOptions](#removestorageoptions) | 是 |  uni.removeStorage参数定义 |\n#### RemoveStorageOptions @removestorageoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| key | string | 是 |  本地缓存中的指定的 key |\n| success | ([RemoveStorageSuccess](#removestoragesuccess)) => void | 否 |  接口调用的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[removeStorage](hhttps://uniapp.dcloud.net.cn/api/storage/storage.html#removestorage)\n"
  },
  "removeStorageSync": {
    "name": "## uni.removeStorageSync(key) @removestoragesync",
    "description": "\r\nuni.removeStorageSync函数定义\r\n从本地缓存中同步移除指定 key。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| key | string | 是 | 本地缓存中的指定的 key |",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[removeStorageSync](https://uniapp.dcloud.net.cn/api/storage/storage.html#removestoragesync)\n"
  },
  "clearStorage": {
    "name": "## uni.clearStorage(option?) @clearstorage",
    "description": "\r\nuni.clearStorage函数定义\r\n清理本地数据缓存。\r\n",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| option | [ClearStorageOptions](#clearstorageoptions) | 否 | - |\n#### ClearStorageOptions @clearstorageoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| success | ([ClearStorageSuccess](#clearstoragesuccess)) => void | 否 |  接口调用的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[clearStorage](https://uniapp.dcloud.net.cn/api/storage/storage.html#clearstorage)\n"
  },
  "clearStorageSync": {
    "name": "## uni.clearStorageSync() @clearstoragesync",
    "description": "\r\nuni.clearStorageSync函数定义\r\n清理本地数据缓存。\r\n",
    "param": "",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4.4 | 2.0.3 | 3.9.0 | 9.0 | 2.0.3 | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[clearStorageSync](https://uniapp.dcloud.net.cn/api/storage/storage.html#clearstoragesync)\n"
  },
  "connectSocket": {
    "name": "## uni.connectSocket(options) @connectsocket",
    "description": "创建一个 WebSocket 连接。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [ConnectSocketOptions](#connectsocketoptions) | 是 | - |\n#### ConnectSocketOptions @connectsocketoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| url | string | 是 |  开发者服务器接口地址，必须是 wss 协议，且域名必须是后台配置的合法域名 |\n| header | [UTSJSONObject](#utsjsonobject) | 是 |  HTTP 请求 Header，header 中不能设置 Referer |\n| protocols | Array\\<string\\> | 是 |  子协议数组 |\n| success | ([ConnectSocketSuccess](#connectsocketsuccess)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([UniError](/uni-app-x/common/unierror.md)) => void | 否 |  接口调用失败的回调函数 |\n| complete | (any) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### ConnectSocketSuccess @connectsocketsuccess \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errMsg | string | 是 | - |\n",
    "returnValue": "### 返回值 \n\n| 类型 |\n| :- |\n| [SocketTask](#sockettask) | \n\n#### SocketTask @sockettask \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| send | ([SendSocketMessageOptions](#sendsocketmessageoptions)) => void | 是 | 通过 WebSocket 连接发送数据 |\n| close | ([CloseSocketOptions](#closesocketoptions)) => void | 是 | 关闭 WebSocket 连接 |\n| onOpen | (([OnSocketOpenCallbackResult](#onsocketopencallbackresult)) => void) => void | 是 | 监听 WebSocket 连接打开事件 |\n| onClose | ((any) => void) => void | 是 | 监听 WebSocket 连接关闭事件 |\n| onError | (([GeneralCallbackResult](#generalcallbackresult)) => void) => void | 是 | 监听 WebSocket 错误 |\n| onMessage | (([OnSocketMessageCallbackResult](#onsocketmessagecallbackresult)) => void) => void | 是 | 监听 WebSocket 接受到服务器的消息事件 |\n\n##### SendSocketMessageOptions @sendsocketmessageoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| data | any | 是 |  需要发送的内容 |\n| success | ([GeneralCallbackResult](#generalcallbackresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([GeneralCallbackResult](#generalcallbackresult)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([GeneralCallbackResult](#generalcallbackresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### CloseSocketOptions @closesocketoptions \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| code | number | 否 |  一个数字值表示关闭连接的状态号，表示连接被关闭的原因。如果这个参数没有被指定，默认的取值是1000 （表示正常连接关闭） |\n| reason | string | 否 |  一个可读的字符串，表示连接被关闭的原因。这个字符串必须是不长于123字节的UTF-8 文本（不是字符） |\n| success | ([GeneralCallbackResult](#generalcallbackresult)) => void | 否 |  接口调用成功的回调函数 |\n| fail | ([GeneralCallbackResult](#generalcallbackresult)) => void | 否 |  接口调用失败的回调函数 |\n| complete | ([GeneralCallbackResult](#generalcallbackresult)) => void | 否 |  接口调用结束的回调函数（调用成功、失败都会执行） |\n\n##### OnSocketOpenCallbackResult @onsocketopencallbackresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| header | any | 是 |  连接成功的 HTTP 响应 Header |\n\n##### OnSocketMessageCallbackResult @onsocketmessagecallbackresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| data | any | 是 |  服务器返回的消息 |\n",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[connectSocket](https://uniapp.dcloud.net.cn/api/request/websocket.html#connectsocket)\n"
  },
  "onSocketOpen": {
    "name": "## uni.onSocketOpen(options) @onsocketopen",
    "description": "监听WebSocket连接打开事件。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | ([OnSocketOpenCallbackResult](#onsocketopencallbackresult)) => void | 是 | - |",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[onSocketOpen](https://uniapp.dcloud.net.cn/api/request/websocket.html#onsocketopen)\n"
  },
  "onSocketError": {
    "name": "## uni.onSocketError(callback) @onsocketerror",
    "description": "下载文件资源到本地，客户端直接发起一个 HTTP GET 请求，返回文件的本地临时路径。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| callback | ([OnSocketErrorCallbackResult](#onsocketerrorcallbackresult)) => void | 是 | - |\n#### OnSocketErrorCallbackResult @onsocketerrorcallbackresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errMsg | string | 是 |  错误信息 |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[onSocketError](https://uniapp.dcloud.net.cn/api/request/websocket.html#onsocketerror)\n"
  },
  "sendSocketMessage": {
    "name": "## uni.sendSocketMessage(options) @sendsocketmessage",
    "description": "通过 WebSocket 连接发送数据，需要先 uni.connectSocket，并在 uni.onSocketOpen 回调之后才能发送。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [SendSocketMessageOptions](#sendsocketmessageoptions) | 是 | - |",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[sendSocketMessage](https://uniapp.dcloud.net.cn/api/request/websocket.html#sendsocketmessage)\n"
  },
  "onSocketMessage": {
    "name": "## uni.onSocketMessage(callback) @onsocketmessage",
    "description": "监听WebSocket接受到服务器的消息事件。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| callback | ([OnSocketMessageCallbackResult](#onsocketmessagecallbackresult)) => void | 是 | - |",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[onSocketMessage](https://uniapp.dcloud.net.cn/api/request/websocket.html#onsocketmessage)\n"
  },
  "closeSocket": {
    "name": "## uni.closeSocket(options) @closesocket",
    "description": "关闭 WebSocket 连接。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| options | [CloseSocketOptions](#closesocketoptions) | 是 | - |",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[closeSocket](https://uniapp.dcloud.net.cn/api/request/websocket.html#closesocket)\n"
  },
  "onSocketClose": {
    "name": "## uni.onSocketClose(callback) @onsocketclose",
    "description": "监听WebSocket关闭。",
    "param": "### 参数 \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| callback | ([OnSocketCloseCallbackResult](#onsocketclosecallbackresult)) => void | 是 | - |\n#### OnSocketCloseCallbackResult @onsocketclosecallbackresult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| code | number | 是 |  一个数字值表示关闭连接的状态号，表示连接被关闭的原因。\t |\n| reason | string | 是 |  一个可读的字符串，表示连接被关闭的原因。\t |\n",
    "returnValue": "",
    "compatibility": "### 兼容性 \n\n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 4.4 | √ | 3.9.0 | 9.0 | √ | 3.9.0 |\n",
    "tutorial": "\n### 参见\n[onSocketClose](https://uniapp.dcloud.net.cn/api/request/websocket.html#onsocketclose)\n"
  },
  "general_type": {
    "name": "## 通用类型\n",
    "param": "### GeneralCallbackResult \n\n| 名称 | 类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| errMsg | string | 是 |  错误信息 |\n"
  }
}