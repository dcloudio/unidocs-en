{"animation-view":{"name":"## animation-view","description":"Lottie 动画","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| path | String | - | 动画资源地址，目前只支持绝对路径 |\n| loop | Boolean | - | 动画是否循环播放 |\n| autoplay | Boolean | - | 动画是否自动播放 |\n| action | String | - | 动画操作，可取值 play、pause、stop [action](#action-values) |\n| hidden | Boolean | - | 是否隐藏动画 |\n| @ended | Any | - | - |\n\n#### action @action-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| play | 播放 |\n| pause | 暂停 |\n| stop | 停止 |\n","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/animation-view)\n- [插件市场](https://ext.dcloud.net.cn/plugin?id=10674)\n"},"button":{"name":"## button","description":"按钮","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| disabled | Boolean | false | 是否禁用 |\n| hover-class | ClassString | button-hover | 指定按下去的样式类。当 hover-class=\"none\" 时，没有点击态效果 |\n| hover-start-time | Number | 20 | 按住后多久出现点击态，单位毫秒 |\n| hover-stay-time | Number | 70 | 手指松开后点击态保留时间，单位毫秒 |\n| size | String | default | 按钮的大小 [size](#size-values) |\n| type | String | default | 按钮的样式类型 [type](#type-values) |\n| plain | Boolean | false | 按钮是否镂空，背景色透明 |\n\n#### size @size-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| default | 默认大小 |\n| mini | 小尺寸 |\n\n\n#### type @type-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| default | 白色 |\n| primary | 蓝色 |\n| warn | 红色 |\n","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/button)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/button/button.uvue)\n"},"checkbox":{"name":"## checkbox","description":"多选项目","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| disabled | Boolean | false | 是否禁用 |\n| value | String | - | checkbox 标识，选中时触发 checkbox-group 的 change 事件，并携带 checkbox 的 value |\n| checked | Boolean | false | 当前是否选中，可用来设置默认选中 |\n| color | ColorString | #007aff | checkbox的颜色 |\n| backgroundColor | ColorString | #ffffff | checkbox默认的背景颜色 |\n| borderColor | ColorString | #d1d1d1 | checkbox默认的边框颜色 |\n| activeBackgroundColor | ColorString | #ffffff | checkbox选中时的背景颜色 |\n| activeBorderColor | ColorString | #d1d1d1 | checkbox选中时的边框颜色 |\n| iconColor | ColorString | #007aff | checkbox的图标颜色，优先级大于color属性 |","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/checkbox)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/checkbox/checkbox.uvue)\n"},"checkbox-group":{"name":"## checkbox-group","description":"多项选择器，内部由多个checkbox组成","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| @change | (event: [CheckboxGroupChangeEvent](#CheckboxGroupChangeEvent)) => void | - | checkbox-group中选中项发生改变是触发 change 事件，detail = {value:\\[选中的checkbox的value的数组\\]} |","event":"\n### 事件\n#### CheckboxGroupChangeEvent\n\n> Package name: io.dcloud.uniapp.framework\n```mermaid\nclassDiagram\n\nCustomEvent <|-- CheckboxGroupChangeEvent : Extend\n```\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | Array\\<string\\> | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | T | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### CheckboxGroupChangeEventDetail\n\n> Package name: io.dcloud.uniapp.framework\n\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | Array\\<string\\> | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | Array\\<string\\> | 是 | - |\n","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/checkbox)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/checkbox-group/checkbox-group.uvue)\n"},"image":{"name":"## image","description":"图片","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| src | ImageURIString | - | 图片资源地址 |\n| mode | String | - | 图片裁剪、缩放的模式 [mode](#mode-values) |\n| fade-show | Boolean | - | 图片显示动画效果 |\n| @error | (event: [ImageErrorEvent](#ImageErrorEvent)) => void | - | 图片加载错误时触发，event.detail = { errMsg } |\n| @load | (event: [ImageLoadEvent](#ImageLoadEvent)) => void | - | 图片加载完成时触发，event.detail = { width: '图片宽度px', height: '图片高度px' } |\n\n#### mode @mode-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| scaleToFill | 不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素 |\n| aspectFit | 保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。 |\n| aspectFill | 保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取 |\n| widthFix | 宽度不变，高度自动变化，保持原图宽高比不变 |\n| heightFix | 高度不变，宽度自动变化，保持原图宽高比不变 |\n| top | 不缩放图片，只显示图片的顶部区域 |\n| bottom | 不缩放图片，只显示图片的底部区域 |\n| center | 不缩放图片，只显示图片的中间区域 |\n| left | 不缩放图片，只显示图片的左边区域 |\n| right | 不缩放图片，只显示图片的右边区域 |\n| top left | 不缩放图片，只显示图片的左上边区域 |\n| top rigth | 不缩放图片，只显示图片的右上边区域 |\n| bottom left | 不缩放图片，只显示图片的左下边区域 |\n| bottom right | 不缩放图片，只显示图片的右下边区域 |\n","event":"\n### 事件\n#### ImageErrorEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- ImageErrorEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { errMsg: string; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### ImageLoadEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- ImageLoadEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { width: number; height: number; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| image | 5.0 | √ | 3.9.0 | 9.0 | √ | - |\n| src | 5.0 | √ | 3.9+ | 9.0 | x | x |\n| fade-show | 5.0 | √ | 3.9+ | 9.0 | x | x |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/image)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/image/image.uvue)\n"},"input":{"name":"## input","description":"输入框","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| disabled | Boolean | - | 是否禁用 |\n| value | String | - | 输入框的初始内容 |\n| type | String | - | input的类型 [type](#type-values) |\n| password | Boolean | - | 是否是密码类型 |\n| placeholder | String | - | 输入框为空时占位符 |\n| placeholder-style | String | - | 指定 placeholder 的样式 |\n| placeholder-class | String | - | 指定 placeholder 的样式类 |\n| maxlength | Number | - | 最大输入长度，设置为 -1 的时候不限制最大长度 |\n| cursor-spacing | Number | - | 指定光标与键盘的距离，单位 px 。取 input 距离底部的距离和 cursor-spacing 指定的距离的最小值作为光标与键盘的距离 |\n| auto-focus | Boolean | - | 自动获取焦点 |\n| focus | Boolean | - | 获取焦点 |\n| confirm-type | String | - | 设置键盘右下角按钮的文字 [confirm-type](#confirm-type-values) |\n| always-embed | Boolean | - | 强制 input 处于同层状态，默认 focus 时 input 会切到非同层状态 (仅在 iOS 下生效) |\n| confirm-hold | Boolean | - | 点击键盘右下角按钮时是否保持键盘不收起 |\n| cursor | Number | - | 指定focus时的光标位置 |\n| selection-start | Number | - | 光标起始位置，自动聚集时有效，需与selection-end搭配使用 |\n| selection-end | Number | - | 光标结束位置，自动聚集时有效，需与selection-satrt搭配使用 |\n| adjust-position | Boolean | - | 键盘弹起时，是否自动上推页面 |\n| text-content-type | String | - | 文本区域的语义，根据类型自动填充 [text-content-type](#text-content-type-values) |\n| hold-keyboard | Boolean | - | focus时，点击页面的时候不收起键盘 |\n| safe-password-cert-path | String | - | 安全键盘加密公钥的路径，只支持包内路径 |\n| safe-password-length | Number | - | 安全键盘输入密码长度 |\n| safe-password-time-stamp | Number | - | 安全键盘加密时间戳 |\n| safe-password-nonce | String | - | 安全键盘加密盐值 |\n| safe-password-salt | String | - | 安全键盘计算 hash 盐值，若指定custom-hash 则无效 |\n| safe-password-custom-hash | String | - | 安全键盘计算 hash 的算法表达式 |\n| random-number | Boolean | - | 当 type 为 number, digit, idcard 数字键盘是否随机排列 |\n| controlled | Boolean | - | 是否为受控组件。为 true 时，value 内容会完全受 setData 控制 |\n| always-system | Boolean | - | 是否强制使用系统键盘和 Web-view 创建的 input 元素。为 true 时，confirm-type、confirm-hold 可能失效 |\n| inputmode | String | - | 是一个枚举属性，它提供了用户在编辑元素或其内容时可能输入的数据类型的提示。在符合条件的高版本webview里，uni-app的 web 和 app-vue 平台中可使用本属性。 [inputmode](#inputmode-values) |\n| @input | (event: [Event](#Event)) => void | - | 当键盘输入时，触发input事件，event.detail = {value, cursor}，处理函数可以直接 return 一个字符串，将替换输入框的内容。 |\n| @focus | (event: [Event](#Event)) => void | - | 输入框聚焦时触发，event.detail = { value, height }，height 为键盘高度，在基础库 1.9.90 起支持 |\n| @blur | (event: [Event](#Event)) => void | - | 输入框失去焦点时触发，event.detail = {value: value} |\n| @keyboardheightchange | (event: [Event](#Event)) => void | - | 键盘高度发生变化的时候触发此事件，event.detail = {height: height, duration: duration} |\n| @confirm | (event: [Event](#Event)) => void | - | 点击完成按钮时触发，event.detail = {value: value} |\n\n#### type @type-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| text | 文本输入键盘 |\n| number | 数字输入键盘 |\n| idcard | 身份证输入键盘 |\n| digit | 带小数点数字输入键盘 |\n| safe-password | 密码安全输入键盘 |\n| nickname | 昵称输入键盘 |\n\n\n#### confirm-type @confirm-type-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| send | 发送 |\n| search | 搜索 |\n| next | 下一个 |\n| go | 前往 |\n| done | 完成 |\n\n\n#### text-content-type @text-content-type-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| oneTimeCode | 一次性验证码 |\n\n\n#### inputmode @inputmode-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| none | 无虚拟键盘。在应用程序或者站点需要实现自己的键盘输入控件时很有用。 |\n| text | 使用用户本地区域设置的标准文本输入键盘。 |\n| decimal | 小数输入键盘，包含数字和分隔符（通常是“ . ”或者“ , ”），设备可能也可能不显示减号键。 |\n| numeric | 数字输入键盘，所需要的就是 0 到 9 的数字，设备可能也可能不显示减号键。 |\n| tel | 电话输入键盘，包含 0 到 9 的数字、星号（*）和井号（#）键。表单输入里面的电话输入通常应该使用 \\\\<input type=\"tel\"\\\\> 。 |\n| search | 为搜索输入优化的虚拟键盘，比如，返回键可能被重新标记为“搜索”，也可能还有其他的优化。 |\n| email | 为邮件地址输入优化的虚拟键盘，通常包含\"@\"符号和其他优化。表单里面的邮件地址输入应该使用 \\\\<input type=\"email\"\\\\> 。 |\n| url | 为网址输入优化的虚拟键盘，比如，“/”键会更加明显、历史记录访问等。表单里面的网址输入通常应该使用 \\\\<input type=\"url\"\\\\> 。 |\n","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/input)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/input/input.uvue)\n"},"list-item":{"name":"## list-item","description":"列表组件","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| type | Number | - | 对应list-item的类型 List 将对同类型条目进行复用，所以合理的类型拆分，可以很好地提升 List 性能 |","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/list-view#list-item)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/list-item/list-item.uvue)\n"},"list-view":{"name":"## list-view","description":"列表组件","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| scroll-x | Boolean | false | 允许横向滚动，不支持同时设置scroll-y属性 |\n| scroll-y | Boolean | true | 允许纵向滚动，不支持同时设置scroll-x属性 |\n| rebound | Boolean | true | 控制是否回弹效果 |\n| upper-threshold | Number | 50 | 距顶部/左边多远时（单位px），触发 scrolltoupper 事件 |\n| lower-threshold | Number | 50 | 距底部/右边多远时（单位px），触发 scrolltolower 事件 |\n| scroll-top | Number | - | 设置竖向滚动条位置 |\n| scroll-left | Number | - | 设置横向滚动条位置 |\n| show-scrollbar | Boolean | true | 控制是否出现滚动条 |\n| scroll-into-view | String | - | 值应为某子元素id（id不能以数字开头）。设置哪个方向可滚动，则在哪个方向滚动到该元素 |\n| scroll-with-animation | Boolean | false | 是否在设置滚动条位置时使用滚动动画，设置false没有滚动动画 |\n| refresher-enabled | Boolean | false | 开启自定义下拉刷新，暂时不支持scroll-x = true横向刷新 |\n| refresher-threshold | Number | false | 设置自定义下拉刷新阈值 |\n| refresher-default-style | String | black | 设置自定义下拉刷新默认样式，支持设置 black，white，none，none 表示不使用默认样式 |\n| refresher-background | String | #FFF | 设置自定义下拉刷新区域背景颜色 |\n| refresher-triggered | Boolean | false | 设置当前下拉刷新状态，true 表示下拉刷新已经被触发，false 表示下拉刷新未被触发 |\n| @refresherpulling | (event: [RefresherEvent](#RefresherEvent)) => void | - | 自定义下拉刷新控件被下拉 |\n| @refresherrefresh | (event: [RefresherEvent](#RefresherEvent)) => void | - | 自定义下拉刷新被触发 |\n| @refresherrestore | (event: [RefresherEvent](#RefresherEvent)) => void | - | 自定义下拉刷新被复位 |\n| @refresherabort | (event: [RefresherEvent](#RefresherEvent)) => void | - | 自定义下拉刷新被中止 |\n| @scrolltoupper | (event: [ScrollToUpperEvent](#ScrollToUpperEvent)) => void | - | 滚动到顶部/左边，会触发 scrolltoupper 事件 |\n| @scrolltolower | (event: [ScrollToLowerEvent](#ScrollToLowerEvent)) => void | - | 滚动到底部/右边，会触发 scrolltolower 事件 |\n| @scroll | (event: [ScrollEvent](#ScrollEvent)) => void | - | 滚动时触发，event.detail = {scrollLeft, scrollTop, scrollHeight, scrollWidth, deltaX, deltaY} |","event":"\n### 事件\n#### RefresherEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- RefresherEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { dy: number; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### ScrollToUpperEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- ScrollToUpperEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { direction: string; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### ScrollToLowerEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- ScrollToLowerEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { direction: string; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### ScrollEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- ScrollEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { scrollTop: number; scrollLeft: number; scrollHeight: number; scrollWidth: number; deltaY: number; deltaX: number; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| @refresherpulling | 5.0 | √ | 3.9+ | - | - | - |\n| @refresherrefresh | 5.0 | √ | 3.9+ | - | - | - |\n| @refresherrestore | 5.0 | √ | 3.9+ | - | - | - |\n| @refresherabort | 5.0 | √ | 3.9+ | - | - | - |\n| @scrolltoupper | 5.0 | √ | 3.9+ | - | - | - |\n| @scrolltolower | 5.0 | √ | 3.9+ | - | - | - |\n| @scroll | 5.0 | √ | 3.9+ | - | - | - |\n","reference":"\n### 参见\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/list-view/list-view.uvue)\n"},"navigator":{"name":"## navigator","description":"页面链接","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| target | String | - | 在哪个目标上发生跳转，默认当前应用 |\n| url | String\\|PageURIString | - | 当前应用内的跳转链接 |\n| open-type | String | - | 跳转方式 [open-type](#open-type-values) |\n| delta | Number | - | 当 open-type 为 navigateBack 时有效，表示回退的层数 |\n| app-id | String | - | 当target=\"miniProgram\"时有效，要打开的小程序 appId |\n| path | String | - | 当target=\"miniProgram\"时有效，打开的页面路径，如果为空则打开首页 |\n| extra-data | Object | - | 当target=\"miniProgram\"时有效，需要传递给目标应用的数据，目标应用可在 App.onLaunch()，App.onShow() 中获取到这份数据 |\n| version | String | - | 当target=\"miniProgram\"时有效，要打开的小程序版本，有效值 develop（开发版），trial（体验版），release（正式版），仅在当前小程序为开发版或体验版时此参数有效；如果当前小程序是体验版或正式版，则打开的小程序必定是正式版 |\n| animation-type | String | - | 当 open-type=\"navigateTo\" 或 open-type=\"navigateBack\" 时有效，窗口的显示/关闭的动画类型。 [animation-type](#animation-type-values) |\n| animation-duration | Number | - | 当 open-type=\"navigateTo\" 或 open-type=\"navigateBack\" 时有效，窗口的显示/关闭动画的持续时间。 |\n| hover-class | String | - | 指定按下去的样式类。当 hover-class=\"none\" 时，没有点击态效果 |\n| hover-stop-propagation | Boolean | - | 指定是否阻止本节点的祖先节点出现点击态 |\n| hover-start-time | Number | - | 按住后多久出现点击态，单位毫秒 |\n| hover-stay-time | Number | - | 手指松开后点击态保留时间，单位毫秒 |\n\n#### open-type @open-type-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| navigate | 对应 wx.navigateTo 或 wx.navigateToMiniProgram 的功能 |\n| redirect | 对应 wx.redirectTo 的功能 |\n| switchTab | 对应 wx.switchTab 的功能 |\n| reLaunch | 对应 wx.reLaunch 的功能 |\n| navigateBack | 对应 wx.navigateBack 的功能 |\n\n\n#### animation-type @animation-type-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| auto | 自动选择动画效果 |\n| none | 无动画效果 |\n| slide-in-right | 从右侧横向滑动效果 |\n| slide-in-left | 左侧横向滑动效果 |\n| slide-in-top | 从上侧竖向滑动效果 |\n| slide-in-bottom | 从下侧竖向滑动效果 |\n| fade-in | 从透明到不透明逐渐显示效果 |\n| zoom-out | 从小到大逐渐放大显示效果 |\n| zoom-fade-out | 从小到大逐渐放大并且从透明到不透明逐渐显示效果 |\n| pop-in | 从右侧平移入栈动画效果 |\n| slide-out-right | 横向向右侧滑出屏幕动画 |\n| slide-out-left | 横向向左侧滑出屏幕动画 |\n| slide-out-top | 竖向向上侧滑出屏幕动画 |\n| slide-out-bottom | 竖向向下侧滑出屏幕动画 |\n| fade-out | 从不透明到透明逐渐隐藏动画 |\n| zoom-in | 从大逐渐缩小关闭动画 |\n| zoom-fade-in | 从大逐渐缩小并且从不透明到透明逐渐隐藏关闭动画 |\n| pop-out | 从右侧平移出栈动画效果 |\n","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/navigator)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/navigator/navigator.uvue)\n"},"picker-view-column":{"name":"## picker-view-column","description":"仅可放置于 picker-view 中，其子节点未继承 picker-view 的选中框的高度，需要自己设置高度并居中","attrubute":"","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.net.cn/component/picker-view.html#picker-view-column)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/picker-view-column/picker-view-column.uvue)\n"},"picker-view":{"name":"## picker-view","description":"嵌入页面的滚动选择器","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| value | Array\\<Number\\> | - | picker-view-column 选择的第几项 |\n| indicator-style | CSSString | - | 设置选择器中间选中框的样式 |\n| mask-top-style | CSSString | - | 设置蒙层上半部分的样式 |\n| mask-bottom-style | CSSString | - | 设置蒙层下半部分的样式 |\n| @change | (event: [PickerViewChangeEvent](#PickerViewChangeEvent)) => void | - | 当滚动选择，value 改变时触发 change 事件，event.detail = {value: value}；value为数组，表示 picker-view 内的 picker-view-column 当前选择的是第几项（下标从 0 \t\t开始） |","event":"\n### 事件\n#### PickerViewChangeEvent\n\n> Package name: io.dcloud.uniapp.framework\n```mermaid\nclassDiagram\n\nCustomEvent <|-- PickerViewChangeEvent : Extend\n```\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | Array\\<number\\> | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | T | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### PickerViewChangeEventDetail\n\n> Package name: io.dcloud.uniapp.framework\n\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | Array\\<number\\> | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | Array\\<number\\> | 是 | - |\n","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/picker-view)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/picker-view/picker-view.uvue)\n"},"progress":{"name":"## progress","description":"进度条","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| duration | Number | 30 | 进度增加1%所需毫秒数 |\n| percent | Number | 0 | 百分比0~100 |\n| show-info | Boolean | false | 在进度条右侧显示百分比 |\n| border-radius | Number | 0 | 圆角大小 |\n| font-size | Number | 16 | 右侧百分比字体大小 |\n| stroke-width | Number | 6 | 进度条线的宽度，单位px |\n| color | ColorString | - | 进度条颜色 （请使用 activeColor） |\n| activeColor | ColorString | #09BB07 | 已选择的进度条的颜色 |\n| backgroundColor | ColorString | #EBEBEB | 未选择的进度条的颜色 |\n| active | Boolean | false | 进度条从左往右的动画 |\n| active-mode | String | backwards | backwards: 动画从头播；forwards：动画从上次结束点接着播 [active-mode](#active-mode-values) |\n| @activeend | (event: [ProgressActiveendEvent](#ProgressActiveendEvent)) => void | - | 动画完成事件 |\n\n#### active-mode @active-mode-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| backwards | 动画从头播 |\n| forwards | 动画从上次结束点接着播 |\n","event":"\n### 事件\n#### ProgressActiveendEvent\n\n> Package name: io.dcloud.uniapp.framework\n```mermaid\nclassDiagram\n\nCustomEvent <|-- ProgressActiveendEvent : Extend\n```\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | number | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | T | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### ProgressActiveendEventDetail\n\n> Package name: io.dcloud.uniapp.framework\n\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | number | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| curPercent | number | 是 | - |\n","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/progress)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/progress/progress.uvue)\n"},"radio":{"name":"## radio","description":"单选项目","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| disabled | Boolean | false | 是否禁用 |\n| value | String | - | \\<radio/\\> 标识。当该radio 选中时，radio-group的 change 事件会携带radio的value |\n| checked | Boolean | false | \\<radio/\\> 当前是否选中 |\n| color | ColorString | #007AFF | radio的颜色 |\n| backgroundColor | ColorString | #ffffff | radio默认的背景颜色 |\n| borderColor | ColorString | #d1d1d1 | radio默认的边框颜色 |\n| activeBackgroundColor | ColorString | #007AFF | radio选中时的背景颜色，优先级大于color属性 |\n| activeBorderColor | ColorString |  | radio选中时的边框颜色 |\n| iconColor | ColorString | #ffffff | radio的图标颜色 |\n| @click | (event: [MouseEvent](#MouseEvent)) => void | - | 组件被点击时触发 |","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/radio)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/radio/radio.uvue)\n"},"radio-group":{"name":"## radio-group","description":"单项选择器，内部由多个 radio 组成","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| @change | (event: [RadioGroupChangeEvent](#RadioGroupChangeEvent)) => void | - | radio-group 中的选中项发生变化时触发 change 事件，event.detail = {value: 选中项radio的value} |","event":"\n### 事件\n#### RadioGroupChangeEvent\n\n> Package name: io.dcloud.uniapp.framework\n```mermaid\nclassDiagram\n\nCustomEvent <|-- RadioGroupChangeEvent : Extend\n```\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | string | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | T | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### RadioGroupChangeEventDetail\n\n> Package name: io.dcloud.uniapp.framework\n\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | string | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | string | 是 | - |\n","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/radio)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/radio-group/radio-group.uvue)\n"},"rich-text":{"name":"## rich-text","description":"富文本","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| nodes | Array | - | 节点列表 |\n| @itemclick | (event: [RichTextItemClickEvent](#RichTextItemClickEvent)) => void | - | 拦截点击事件（只支持 a、img标签），返回用户自定义数据或img标签的src属性或a标签的href属性。event.detail={ ref \\| src \\| href } |","event":"\n### 事件\n#### RichTextItemClickEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- RichTextItemClickEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { ref: string; src: string; href: string; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| rich-text | 5.0 | √ | 3.9.0 | 9.0 | √ | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/rich-text)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/rich-text/rich-text.uvue)\n"},"scroll-view":{"name":"## scroll-view","description":"可滚动视图区域","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| scroll-x | Boolean | false | 允许横向滚动，不支持同时设置scroll-y属性 |\n| scroll-y | Boolean | true | 允许纵向滚动，不支持同时设置scroll-x属性 |\n| rebound | Boolean | true | 控制是否回弹效果 |\n| upper-threshold | Number | 50 | 距顶部/左边多远时（单位px），触发 scrolltoupper 事件 |\n| lower-threshold | Number | 50 | 距底部/右边多远时（单位px），触发 scrolltolower 事件 |\n| scroll-top | Number | - | 设置竖向滚动条位置 |\n| scroll-left | Number | - | 设置横向滚动条位置 |\n| scroll-into-view | String | - | 值应为某子元素id（id不能以数字开头）。设置哪个方向可滚动，则在哪个方向滚动到该元素 |\n| scroll-with-animation | Boolean | false | 是否在设置滚动条位置时使用滚动动画，设置false没有滚动动画 |\n| refresher-enabled | Boolean | false | 开启自定义下拉刷新，暂时不支持scroll-x = true横向刷新 |\n| refresher-threshold | Number | 45 | 设置自定义下拉刷新阈值 |\n| refresher-default-style | String | black | 设置自定义下拉刷新默认样式，支持设置 black \\| white \\| none， none 表示不使用默认样式 |\n| refresher-background | String | #FFF | 设置自定义下拉刷新区域背景颜色 |\n| refresher-triggered | Boolean | false | 设置当前下拉刷新状态，true 表示下拉刷新已经被触发，false 表示下拉刷新未被触发 |\n| show-scrollbar | Boolean | true | 控制是否出现滚动条 |\n| @refresherpulling | (event: [RefresherEvent](#RefresherEvent)) => void | - | 自定义下拉刷新控件被下拉 |\n| @refresherrefresh | (event: [RefresherEvent](#RefresherEvent)) => void | - | 自定义下拉刷新被触发 |\n| @refresherrestore | (event: [RefresherEvent](#RefresherEvent)) => void | - | 自定义下拉刷新被复位 |\n| @refresherabort | (event: [RefresherEvent](#RefresherEvent)) => void | - | 自定义下拉刷新被中止 |\n| @scrolltoupper | (event: [ScrollToUpperEvent](#ScrollToUpperEvent)) => void | - | 滚动到顶部/左边，会触发 scrolltoupper 事件 |\n| @scrolltolower | (event: [ScrollToLowerEvent](#ScrollToLowerEvent)) => void | - | 滚动到底部/右边，会触发 scrolltolower 事件 |\n| @scroll | (event: [ScrollEvent](#ScrollEvent)) => void | - | 滚动时触发，event.detail = {scrollLeft, scrollTop, scrollHeight, scrollWidth, deltaX, deltaY} |","event":"\n### 事件\n#### RefresherEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- RefresherEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { dy: number; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### ScrollToUpperEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- ScrollToUpperEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { direction: string; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### ScrollToLowerEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- ScrollToLowerEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { direction: string; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### ScrollEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- ScrollEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { scrollTop: number; scrollLeft: number; scrollHeight: number; scrollWidth: number; deltaY: number; deltaX: number; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| @refresherpulling | 5.0 | √ | 3.9+ | - | - | - |\n| @refresherrefresh | 5.0 | √ | 3.9+ | - | - | - |\n| @refresherrestore | 5.0 | √ | 3.9+ | - | - | - |\n| @refresherabort | 5.0 | √ | 3.9+ | - | - | - |\n| @scrolltoupper | 5.0 | √ | 3.9+ | - | - | - |\n| @scrolltolower | 5.0 | √ | 3.9+ | - | - | - |\n| @scroll | 5.0 | √ | 3.9+ | - | - | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/scroll-view)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/scroll-view/scroll-view.uvue)\n"},"slider":{"name":"## slider","description":"滑动选择器","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| disabled | Boolean | - | 是否禁用 |\n| min | Number | 0 | slider 最小值 |\n| max | Number | 100 | slider 最大值 |\n| step | Number | 1 | slider 步长，取值必须大于 0，并且可被(max - min)整除 |\n| value | Number | 0 | radio当前取值 |\n| color | ColorString | - | slider 背景条的颜色（请使用 backgroundColor） |\n| activeColor | ColorString | #007aff | slider 滑块左侧已选择部分的线条颜色 |\n| backgroundColor | ColorString | #e9e9e9 | radio背景条的颜色 |\n| block-size | Number | 28 | radio滑块的大小，取值范围为 12 - 28 |\n| block-color | ColorString | #ffffff | 滑块颜色 |\n| show-value | Boolean | false | 是否显示当前 value |\n| @change | (event: [SliderChangeEvent](#SliderChangeEvent)) => void | - | 完成一次拖动后触发的事件，event.detail = {value: value} |\n| @changing | (event: [SliderChangeEvent](#SliderChangeEvent)) => void | - | 拖动过程中触发的事件，event.detail = {value: value} |","event":"\n### 事件\n#### SliderChangeEvent\n\n> Package name: io.dcloud.uniapp.framework\n```mermaid\nclassDiagram\n\nCustomEvent <|-- SliderChangeEvent : Extend\n```\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | number | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | T | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### SliderChangeEventDetail\n\n> Package name: io.dcloud.uniapp.framework\n\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | number | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | number | 是 | - |\n","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| @change | 5.0 | √ | 3.9+ | - | - | - |\n| @changing | 5.0 | √ | 3.9+ | - | - | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/slider)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/slider/slider.uvue)\n"},"swiper-item":{"name":"## swiper-item","description":"仅可放置在 swiper 组件中，宽高自动设置为100%","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| item-id | String | - | 该 swiper-item 的标识符 |","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.net.cn/component/swiper.html#swiper-item)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/swiper-item/swiper-item.uvue)\n"},"swiper":{"name":"## swiper","description":"滑块视图容器","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| indicator-dots | Boolean | - | 是否显示面板指示点 |\n| indicator-color | HexColor | - | 指示点颜色 |\n| indicator-active-color | HexColor | - | 当前选中的指示点颜色 |\n| active-class | String | - | swiper-item 可见时的 class |\n| changing-class | Boolean | - | acceleration 设置为 {{true}} 时且处于滑动过程中，中间若干屏处于可见时的class |\n| acceleration | Boolean | - | 当开启时，会根据滑动速度，连续滑动多屏 |\n| disable-programmatic-animation | Boolean | - | 是否禁用代码变动触发 swiper 切换时使用动画。 |\n| disable-touch | Boolean | - | 是否禁止用户 touch 操作 |\n| touchable | Boolean | - | 是否监听用户的触摸事件 |\n| easing-function | String | - | 指定 swiper 切换缓动动画类型，有效值：default、linear、easeInCubic、easeOutCubic、easeInOutCubic [easing-function](#easing-function-values) |\n| autoplay | Boolean | - | 是否自动切换 |\n| current | Number | - | 当前所在滑块的 index |\n| current-item-id | String | - | 当前所在滑块的 item-id ，不能与 current 被同时指定 |\n| interval | Number | - | 自动切换时间间隔 |\n| duration | Number | - | 滑动动画时长 |\n| circular | Boolean | - | 是否采用衔接滑动 |\n| vertical | Boolean | - | 滑动方向是否为纵向 |\n| previous-margin | String | - | 前边距，可用于露出前一项的一小部分，接受 px 和 rpx 值 |\n| next-margin | String | - | 后边距，可用于露出后一项的一小部分，接受 px 和 rpx 值 |\n| display-multiple-items | Number | - | 同时显示的滑块数量 |\n| skip-hidden-item-layout | Boolean | - | 是否跳过未显示的滑块布局，设为 true 可优化复杂情况下的滑动性能，但会丢失隐藏状态滑块的布局信息 |\n| @change | (event: [Event](#Event)) => void | - | current 改变时会触发 change 事件，event.detail = {current: current, source: source} |\n| @transition | (event: [Event](#Event)) => void | - | swiper-item 的位置发生改变时会触发 transition 事件，event.detail = {dx: dx, dy: dy} |\n| @animationfinish | (event: [Event](#Event)) => void | - | 动画结束时会触发 animationfinish 事件，event.detail = {current: current, source: source} |\n\n#### easing-function @easing-function-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| default | - |\n| linear | - |\n| easeInCubic | - |\n| easeOutCubic | - |\n| easeInOutCubic | - |\n","event":"","compatibility":"","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/swiper)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/swiper/swiper.uvue)\n"},"switch":{"name":"## switch","description":"开关选择器","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| checked | Boolean | - | 是否选中 |\n| type | String | - | 样式，有效值：switch, checkbox [type](#type-values) |\n| color | ColorString | - | switch 的颜色，同 css 的 color |\n| disabled | Boolean | - | 是否禁用 |\n| @change | (event: [SwitchChangeEvent](#SwitchChangeEvent)) => void | - | checked 改变时触发 change 事件，event.detail={ value:checked} |\n\n#### type @type-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| switch | - |\n| checkbox | - |\n","event":"\n### 事件\n#### SwitchChangeEvent\n\n> Package name: io.dcloud.uniapp.framework\n```mermaid\nclassDiagram\n\nCustomEvent <|-- SwitchChangeEvent : Extend\n```\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | boolean | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | T | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### SwitchChangeEventDetail\n\n> Package name: io.dcloud.uniapp.framework\n\n##### 构造函数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | boolean | 是 | - |\n\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| value | boolean | 是 | - |\n","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| @change | 5.0 | √ | 3.9+ | - | - | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/switch)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/switch/switch.uvue)\n"},"text":{"name":"## text","description":"文本","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| selectable | Boolean | - | 文本是否可选 |\n| space | String | - | 显示连续空格 [space](#space-values) |\n| decode | Boolean | - | 是否解码 |\n\n#### space @space-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| ensp | 中文字符空格一半大小 |\n| emsp | 中文字符空格大小 |\n| nbsp | 根据字体设置的空格大小 |\n","event":"","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| text | 5.0 | √ | 3.9.0 | 9.0 | √ | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/text)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/text/text.uvue)\n"},"textarea":{"name":"## textarea","description":"多行输入框","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| display | Any | - | - |\n| value | String | - | 输入框的初始内容 |\n| placeholder | String | - | 输入框为空时占位符 |\n| placeholder-style | String | - | 指定 placeholder 的样式 |\n| placeholder-class | String | - | 指定 placeholder 的样式类 |\n| maxlength | Number | - | 最大输入长度，设置为 -1 的时候不限制最大长度 |\n| auto-focus | Boolean | - | 自动获取焦点 |\n| focus | Boolean | - | 获取焦点 |\n| cursor | Number | - | 指定focus时的光标位置 |\n| confirm-type | String | - | 设置键盘右下角按钮的文字 [confirm-type](#confirm-type-values) |\n| confirm-hold | Boolean | - | 点击键盘右下角按钮时是否保持键盘不收起 |\n| auto-height | Boolean | - | 是否自动增高，设置auto-height时，style.height不生效 |\n| fixed | Boolean | - | 如果 textarea 是在一个 position:fixed 的区域，需要显示指定属性 fixed 为 true |\n| cursor-spacing | Number | - | 指定光标与键盘的距离，单位 px 。取 textarea 距离底部的距离和 cursor-spacing 指定的距离的最小值作为光标与键盘的距离 |\n| show-confirm-bar | Boolean | - | 是否显示键盘上方带有”完成“按钮那一栏 |\n| selection-start | Number | - | 光标起始位置，自动聚集时有效，需与selection-end搭配使用 |\n| selection-end | Number | - | 光标结束位置，自动聚集时有效，需与selection-satrt搭配使用 |\n| adjust-position | Boolean | - | 键盘弹起时，是否自动上推页面 |\n| inputmode | String | - | 是一个枚举属性，它提供了用户在编辑元素或其内容时可能输入的数据类型的提示。在符合条件的高版本webview里，uni-app的 web 和 app-vue 平台中可使用本属性。 [inputmode](#inputmode-values) |\n| @confirm | (event: [Event](#Event)) => void | - | 点击完成时， 触发 confirm 事件，event.detail = {value: value} |\n| @input | (event: [Event](#Event)) => void | - | 当键盘输入时，触发 input 事件，event.detail = {value, cursor}， @input 处理函数的返回值并不会反映到 textarea 上 |\n| @linechange | (event: [Event](#Event)) => void | - | 输入框行数变化时调用，event.detail = {height: 0, heightRpx: 0, lineCount: 0} |\n| @blur | (event: [Event](#Event)) => void | - | 输入框失去焦点时触发，event.detail = {value, cursor} |\n| @keyboardheightchange | (event: [Event](#Event)) => void | - | 键盘高度发生变化的时候触发此事件，event.detail = {height: height, duration: duration} |\n| @focus | (event: [Event](#Event)) => void | - | 输入框聚焦时触发，event.detail = { value, height }，height 为键盘高度，在基础库 1.9.90 起支持 |\n\n#### confirm-type @confirm-type-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| send | 发送 |\n| search | 搜索 |\n| next | 下一个 |\n| go | 前往 |\n| done | 完成 |\n\n\n#### inputmode @inputmode-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| none | 无虚拟键盘。在应用程序或者站点需要实现自己的键盘输入控件时很有用。 |\n| text | 使用用户本地区域设置的标准文本输入键盘。 |\n| decimal | 小数输入键盘，包含数字和分隔符（通常是“ . ”或者“ , ”），设备可能也可能不显示减号键。 |\n| numeric | 数字输入键盘，所需要的就是 0 到 9 的数字，设备可能也可能不显示减号键。 |\n| tel | 电话输入键盘，包含 0 到 9 的数字、星号（*）和井号（#）键。表单输入里面的电话输入通常应该使用 \\\\<input type=\"tel\"\\\\> 。 |\n| search | 为搜索输入优化的虚拟键盘，比如，返回键可能被重新标记为“搜索”，也可能还有其他的优化。 |\n| email | 为邮件地址输入优化的虚拟键盘，通常包含\"@\"符号和其他优化。表单里面的邮件地址输入应该使用 \\\\<input type=\"email\"\\\\> 。 |\n| url | 为网址输入优化的虚拟键盘，比如，“/”键会更加明显、历史记录访问等。表单里面的网址输入通常应该使用 \\\\<input type=\"url\"\\\\> 。 |\n","event":"","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| @confirm | 5.0 | √ | 3.9+ | - | - | - |\n| @input | 5.0 | √ | 3.9+ | - | - | - |\n| @linechange | 5.0 | √ | 3.9+ | - | - | - |\n| @blur | 5.0 | √ | 3.9+ | - | - | - |\n| @keyboardheightchange | 5.0 | √ | 3.9+ | - | - | - |\n| @focus | 5.0 | √ | 3.9+ | - | - | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/textarea)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/textarea/textarea.uvue)\n"},"video":{"name":"## video","description":"视频","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| loop | Boolean | - | 是否循环播放 |\n| src | String\\|TagVideoURIString | - | 视频资源地址 |\n| initial-time | Number | - | 指定视频初始播放位置 |\n| duration | Number | - | 指定视频长度 |\n| controls | Boolean | - | 是否显示默认播放控件（播放/暂停按钮、播放进度、时间） |\n| danmu-list | Array | - | 弹幕列表 |\n| danmu-btn | Boolean | - | 是否显示弹幕按钮，只在初始化时有效，不能动态变更 |\n| enable-danmu | Boolean | - | 是否展示弹幕，只在初始化时有效，不能动态变更 |\n| autoplay | Boolean | - | 是否自动播放 |\n| muted | Boolean | - | 是否静音播放 |\n| page-gesture | Boolean | - | 在非全屏模式下，是否开启亮度与音量调节手势 |\n| direction | Number | - | 设置全屏时视频的方向，不指定则根据宽高比自动判断。有效值为 0（正常竖向）, 90（屏幕逆时针90度）, -90（屏幕顺时针90度） |\n| show-progress | Boolean | - | 若不设置，宽度大于240时才会显示 |\n| show-fullscreen-btn | Boolean | - | 是否显示全屏按钮 |\n| show-play-btn | Boolean | - | 是否显示视频底部控制栏的播放按钮 |\n| show-center-play-btn | Boolean | - | 是否显示视频中间的播放按钮 |\n| enable-progress-gesture | Boolean | - | 是否开启控制进度的手势 |\n| objectFit | String | - | 当视频大小与 video 容器大小不一致时，视频的表现形式。 [objectFit](#objectFit-values) |\n| poster | String | - | 视频封面的图片网络资源地址，如果 controls 属性值为 false 则设置 poster 无效 |\n| show-mute-btn | Boolean | - | 是否显示静音按钮 |\n| title | String | - | 视频的标题，全屏时在顶部展示 |\n| play-btn-position | String | - | 播放按钮的位置 |\n| enable-play-gesture | Boolean | - | 是否开启播放手势，即双击切换播放、暂停 |\n| auto-pause-if-navigate | Boolean | - | 当跳转到其它小程序页面时，是否自动暂停本页面的视频 |\n| auto-pause-if-open-native | Boolean | - | 当跳转到其它微信原生页面时，是否自动暂停本页面的视频 |\n| vslide-gesture | Boolean | - | 在非全屏模式下，是否开启亮度与音量调节手势（同 page-gesture） |\n| vslide-gesture-in-fullscreen | Boolean | - | 在全屏模式下，是否开启亮度与音量调节手势 |\n| ad-unit-id | String | - | 视频前贴广告单元ID |\n| poster-for-crawler | String | - | 用于给搜索等场景作为视频封面展示，建议使用无播放 icon 的视频封面图，只支持网络地址 |\n| codec | String | - | 解码器选择 |\n| http-cache | Boolean | - | 是否对 http、https 视频源开启本地缓存 |\n| play-strategy | Number | - | 播放策略 |\n| is-live | Boolean | - | 是否为直播源 |\n| @play | (event: [Event](#Event)) => void | - | 当开始/继续播放时触发play事件 |\n| @pause | (event: [Event](#Event)) => void | - | 当暂停播放时，触发pause事件 |\n| @ended | (event: [Event](#Event)) => void | - | 当播放到视频末尾时触发ended事件 |\n| @timeupdate | (event: [Event](#Event)) => void | - | 播放进度变化时触发，event.detail = {currentTime, duration} 。触发频率 250ms 一次 |\n| @fullscreenchange | (event: [Event](#Event)) => void | - | 当视频进入和退出全屏是触发，event.detail = {fullScreen, direction}，direction取为 vertical 或 horizontal |\n| @waiting | (event: [Event](#Event)) => void | - | 视频出现缓冲时触发 |\n| @error | (event: [Event](#Event)) => void | - | 播放出错试触发事件 |\n| @progress | (event: [Event](#Event)) => void | - | 加载进度变化时触发，只支持一段加载。event.detail = {buffered}，百分比 |\n| @loadedmetadata | (event: [Event](#Event)) => void | - | 视频元数据加载完成时触发。event.detail = {width, height, duration} |\n\n#### objectFit @objectFit-values \n\n| 值名称 | 描述 |\n| :- | :- |\n| contain | 包含 |\n| fill | 填充 |\n| cover | 覆盖 |\n","event":"","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| video | 5.0 | √ | 3.9.0 | 9.0 | √ | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/video)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/video/video.uvue)\n"},"view":{"name":"## view","description":"基本视图容器","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| hover-class | String | - | 指定按下去的样式类。当 hover-class=\"none\" 时，没有点击态效果 |\n| hover-stop-propagation | Boolean | - | 指定是否阻止本节点的祖先节点出现点击态 |\n| hover-start-time | Number | - | 按住后多久出现点击态，单位毫秒 |\n| hover-stay-time | Number | - | 手指松开后点击态保留时间，单位毫秒 |","event":"","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| view | 5.0 | √ | √ | - | - | - |\n| hover-class | 4.4 | √ | √ | - | - | - |\n| hover-stop-propagation | 4.4 | √ | √ | - | - | - |\n| hover-start-time | 4.4 | √ | √ | - | - | - |\n| hover-stay-time | 4.4 | √ | √ | - | - | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/view)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/view/view.uvue)\n"},"web-view":{"name":"## web-view","description":"承载网页的容器","attrubute":"### 参数 \n| 属性名 | 类型 | 默认值 | 描述 |\n| :- | :- | :- | :- |\n| src | String\\|URIString | - | webview 指向网页的链接 |\n| webview-styles | Object\\|Boolean | - | webview 的样式 |\n| @message | (event: [WebViewMessageEvent](#WebViewMessageEvent)) => void | - | 网页向应用 postMessage 时触发。e.detail = { data } |\n| @error | (event: [WebViewErrorEvent](#WebViewErrorEvent)) => void | - | 网页加载错误时触发。e.detail = { errMsg } |\n| @loaded | (event: [WebViewLoadedEvent](#WebViewLoadedEvent)) => void | - | 网页加载完成后触发。 |\n| @loading | (event: [WebViewLoadingEvent](#WebViewLoadingEvent)) => void | - | 网页加载中触发。 |","event":"\n### 事件\n#### WebViewMessageEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- WebViewMessageEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { data: any; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### WebViewErrorEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- WebViewErrorEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| detail | { errMsg: string; } | 是 | - |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### WebViewLoadedEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- WebViewLoadedEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n\n#### WebViewLoadingEvent\n\n> Package name: io.dcloud.uniapp.runtime\n```mermaid\nclassDiagram\n\nEvent <|-- WebViewLoadingEvent : Extend\n```\n##### 参数\n| 参数名 | 参数类型 | 必填 | 描述 |\n| :- | :- | :- | :- |\n| type | string | 是 |  事件类型 |\n| target | INode | 是 |  |\n| currentTarget | INode | 是 |  |\n| timeStamp | number | 是 |  事件发生时的时间戳 |\n| stopPropagation | () => void | 是 |  阻止当前事件的进一步传播 |\n| preventDefault | () => void | 是 |  阻止当前事件的默认行为 |\n","compatibility":"\n### 兼容性\n|  | 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- | :- |\n| web-view | 5.0 | √ | 3.9.0 | 9.0 | √ | - |\n","reference":"\n### 参见\n- [Reference](https://uniapp.dcloud.io/component/web-view)\n- [示例](https://gitcode.net/dcloud/hello-uni-app-x/-/blob/master/pages/component/web-view/web-view.uvue)\n"}}