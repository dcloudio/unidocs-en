{"Event":{"name":"## Event","description":"事件返回对象","extends":"","param":"\n### 构造函数\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | - |\n| eventInit | [UTSJSONObject](/uts/buildin-object-api/utsjsonobject.md) | 是 | - | - |\n\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - |  事件类型 |\n| target | [Element](#element) | 是 | - |  触发事件的组件 |\n| currentTarget | [Element](#element) | 是 | - |  当前组件 |\n| timeStamp | number | 是 | - |  事件发生时的时间戳 |\n","methods":{"stopPropagation":{"name":"#### stopPropagation() @stoppropagation","description":"\n阻止当前事件的进一步传播","param":"","returnValue":"","compatibility":"","tutorial":""},"preventDefault":{"name":"#### preventDefault() @preventdefault","description":"\n阻止当前事件的默认行为","param":"","returnValue":"","compatibility":"","tutorial":""}}},"UTSJSONObject":{"name":"## UTSJSONObject","description":"","extends":"","param":"","methods":{"getAny":{"name":"#### getAny(key) @getany","description":"\r\n获取一个 属性，返回类型是any 或者 null","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | - |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| any | \n","compatibility":"##### 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | 3.9.0 | 3.9.0 | 9.0 | √ | x |\n","tutorial":"\n##### 参见\n[getAny](https://uniapp.dcloud.net.cn/uts/buildin-object-api/UTSJSONObject.html#getAny)\n"},"getBoolean":{"name":"#### getBoolean(key) @getboolean","description":"\r\n获取一个Boolean属性，返回类型是Boolean 或者 null","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | - |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| boolean | \n","compatibility":"##### 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | 3.9.0 | 3.9.0 | 9.0 | √ | x |\n","tutorial":"\n##### 参见\n[getBoolean](https://uniapp.dcloud.net.cn/uts/buildin-object-api/UTSJSONObject.html#getBoolean)\n"},"getNumber":{"name":"#### getNumber(key) @getnumber","description":"\r\n获取一个number属性，返回类型是number 或者 null","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | - |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| number | \n","compatibility":"##### 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | 3.9.0 | 3.9.0 | 9.0 | √ | x |\n","tutorial":"\n##### 参见\n[getNumber](https://uniapp.dcloud.net.cn/uts/buildin-object-api/UTSJSONObject.html#getNumber)\n"},"getString":{"name":"#### getString(key) @getstring","description":"\r\n获取一个string属性，返回类型是string 或者 null","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | - |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| string | \n","compatibility":"##### 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | 3.9.0 | 3.9.0 | 9.0 | √ | x |\n","tutorial":"\n##### 参见\n[getString](https://uniapp.dcloud.net.cn/uts/buildin-object-api/UTSJSONObject.html#getString)\n"},"getJSON":{"name":"#### getJSON(key) @getjson","description":"\r\n获取一个UTSJSONObject属性，返回类型是UTSJSONObject 或者 null","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | - |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| [UTSJSONObject](/uts/buildin-object-api/utsjsonobject.md) | \n","compatibility":"##### 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | 3.9.0 | 3.9.0 | 9.0 | √ | x |\n","tutorial":"\n##### 参见\n[getJSON](https://uniapp.dcloud.net.cn/uts/buildin-object-api/UTSJSONObject.html#getJSON)\n"},"getArray":{"name":"#### getArray(key) @getarray","description":"\r\n获取一个Array属性，返回类型是Array 或者 null","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | - |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| any\\[\\] | \n","compatibility":"##### 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | 3.9.0 | 3.9.0 | 9.0 | √ | x |\n","tutorial":"\n##### 参见\n[getArray](https://uniapp.dcloud.net.cn/uts/buildin-object-api/UTSJSONObject.html#getArray)\n"},"toMap":{"name":"#### toMap() @tomap","description":"\r\n将当前 UTSJSONObject 实例转换为 Map 实例。","param":"","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| Map\\<string, any\\> | \n","compatibility":"##### 兼容性 \n| 安卓系统版本 | 安卓 uni-app | 安卓 uni-app-x | iOS 系统版本 | iOS uni-app | iOS uni-app-x |\n| :- | :- | :- | :- | :- | :- |\n| 5.0 | 3.9.0 | 3.9.0 | 9.0 | √ | x |\n","tutorial":"\n##### 参见\n[toMap](https://uniapp.dcloud.net.cn/uts/buildin-object-api/UTSJSONObject.html#toMap)\n"}}},"Element":{"name":"## Element","description":"\n当前组件","extends":"","param":"\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| firstChild | [Element](#element) | 否 | - |  获取当前节点的的第一个子节点，如果节点是无子节点，则返回 null。 |\n| lastChild | [Element](#element) | 否 | - |  获取当前节点的最后一个子节点，如果没有子节点，则返回 null。 |\n| parentNode | [Element](#element) | 否 | - |  获取当前节点在 DOM 树中的父节点，如果没有父节点（如未添加到DOM树中），则返回null。 |\n| previousSibling | [Element](#element) | 否 | - |  获取当前节点的前一个同级节点，没有则返回null。 |\n| nextSibling | [Element](#element) | 否 | - |  获取在 DOM 树中紧跟在其后面的同级节点，如果指定的节点为最后一个节点，则返回 null。 |\n| childNodes | Array\\<[Element](#element)\\> | 是 | - |  获取当前节点包含的子节点的集合 |\n| nodeName | string | 是 | - |  获取当前节点的节点名称 |\n| dataset | Map\\<string, any\\> | 是 | - |  获取节点上自定义数据属性（data-*）的集合 |\n| attributes | Map\\<string, any\\> | 是 | - |  获取节点上所有属性节点的集合 |\n| style | [CSSStyleDeclaration](/uni-app-x/dom/cssstyledeclaration.md) | 是 | - |  获取节点的CSS样式对象 |\n| scrollHeight | number | 是 | - |  表示节点的滚动视图高度 |\n| scrollLeft | number | 是 | - |  表示该节点横向滚动条距离最左的位移。 |\n| scrollTop | number | 是 | - |  表示该节点纵向滚动条距离 |\n| scrollWidth | number | 是 | - |  表示节点的滚动视图宽度 |\n","methods":{"getNodeId":{"name":"#### getNodeId() @getnodeid","description":"\n获取节点标识。","param":"","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| string | \n","compatibility":"","tutorial":""},"appendChild":{"name":"#### appendChild(aChild) @appendchild","description":"\n将一个节点添加到指定父节点的子节点列表的末尾处。如果将被插入的节点已经存在于当前文档的文档树中，那么将会它从原先的位置移动到新的位置。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| aChild | [Element](#element) | 是 | - | 插入子节点对象 |\n###### Element @element \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| firstChild | [Element](#element) | 否 | - |  获取当前节点的的第一个子节点，如果节点是无子节点，则返回 null。 |\n| lastChild | [Element](#element) | 否 | - |  获取当前节点的最后一个子节点，如果没有子节点，则返回 null。 |\n| parentNode | [Element](#element) | 否 | - |  获取当前节点在 DOM 树中的父节点，如果没有父节点（如未添加到DOM树中），则返回null。 |\n| previousSibling | [Element](#element) | 否 | - |  获取当前节点的前一个同级节点，没有则返回null。 |\n| nextSibling | [Element](#element) | 否 | - |  获取在 DOM 树中紧跟在其后面的同级节点，如果指定的节点为最后一个节点，则返回 null。 |\n| childNodes | Array\\<[Element](#element)\\> | 是 | - |  获取当前节点包含的子节点的集合 |\n| nodeName | string | 是 | - |  获取当前节点的节点名称 |\n| dataset | Map\\<string, any\\> | 是 | - |  获取节点上自定义数据属性（data-*）的集合 |\n| attributes | Map\\<string, any\\> | 是 | - |  获取节点上所有属性节点的集合 |\n| style | [CSSStyleDeclaration](/uni-app-x/dom/cssstyledeclaration.md) | 是 | - |  获取节点的CSS样式对象 |\n| scrollHeight | number | 是 | - |  表示节点的滚动视图高度 |\n| scrollLeft | number | 是 | - |  表示该节点横向滚动条距离最左的位移。 |\n| scrollTop | number | 是 | - |  表示该节点纵向滚动条距离 |\n| scrollWidth | number | 是 | - |  表示节点的滚动视图宽度 |\n| getNodeId | () => string | 是 | - |  获取节点标识。 |\n| appendChild | (aChild: [Element](#element)) => void | 是 | - |  将一个节点添加到指定父节点的子节点列表的末尾处。如果将被插入的节点已经存在于当前文档的文档树中，那么将会它从原先的位置移动到新的位置。 |\n| insertBefore | (newChild: [Element](#element), refChild: [Element](#element)) => void | 是 | - |  在参考节点之前插入一个拥有指定父节点的子节点。如果给定的子节点是对文档中现有节点的引用，insertBefore() 会将其从当前位置移动到新位置。 |\n| setAttribute | (key: string, value?: any) => void | 是 | - |  设置指定节点上的某个属性值。如果设置的属性已经存在，则更新该属性值；否则使用指定的名称和值添加一个新的属性。 |\n| getAttribute | (key: string) => any | 是 | - |  获取节点指定的属性值，如果指定的属性不存在则返回null。 |\n| hasAttribute | (key: string) => boolean | 是 | - |  返回改节点是否包含有指定的属性，属性存在则返回true，否则返回false。 |\n| removeAttribute | (key: string) => void | 是 | - |  从节点中删除一个属性，如果指定的属性不存在，则不做任何操作，也不会产生错误。 |\n| getBoundingClientRect | () => [DOMRect](/uni-app-x/dom/domrect.md) | 是 | - |  获取节点的大小及其相对于窗口的位置信息。 |\n| getDrawableContext | () => [DrawableContext](/uni-app-x/dom/drawablecontext.md) | 是 | - |  获取组件的绘制对象，仅uvue页面中的 view 组件支持，其它组件不支持则返回null。 |\n| addEventListener | (type: string, callback: (event: T) => R) => void | 是 | - |  将指定的监听器注册到节点对象上，当该对象触发指定的事件时，指定的回调函数就会被执行。 |\n| removeEventListener | (type: string) => void | 是 | - |  删除使用 addEventListener 方法添加的事件监听器。 |\n| removeChild | (aChild: [Element](#element)) => [Element](#element) | 是 | - |  从节点中删除一个子节点，返回删除的节点。 |\n| remove | () => void | 是 | - |  把节点对象从它所属的 DOM 树中删除。 |\n| dispatchEvent | (type: string, value: [Event](/uni-app-x/component/common#event)) => void | 是 | - |  向一个指定的事件目标派发一个 Event，并以合适的顺序（同步地）调用此事件的监听器回调函数。 |\n| scrollTo | (x: number, y: number) => void | 是 | - |  使界面滚动到给定元素的指定坐标位置 |\n| scrollBy | (x: number, y: number) => void | 是 | - |  使得元素滚动一段特定距离 |\n","returnValue":"","compatibility":"","tutorial":""},"insertBefore":{"name":"#### insertBefore(newChild, refChild) @insertbefore","description":"\n在参考节点之前插入一个拥有指定父节点的子节点。如果给定的子节点是对文档中现有节点的引用，insertBefore() 会将其从当前位置移动到新位置。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| newChild | [Element](#element) | 是 | - | 插入子节点对象 |\n| refChild | [Element](#element) | 是 | - | 已存在父节点的子节点对象 |\n###### Element @element \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| firstChild | [Element](#element) | 否 | - |  获取当前节点的的第一个子节点，如果节点是无子节点，则返回 null。 |\n| lastChild | [Element](#element) | 否 | - |  获取当前节点的最后一个子节点，如果没有子节点，则返回 null。 |\n| parentNode | [Element](#element) | 否 | - |  获取当前节点在 DOM 树中的父节点，如果没有父节点（如未添加到DOM树中），则返回null。 |\n| previousSibling | [Element](#element) | 否 | - |  获取当前节点的前一个同级节点，没有则返回null。 |\n| nextSibling | [Element](#element) | 否 | - |  获取在 DOM 树中紧跟在其后面的同级节点，如果指定的节点为最后一个节点，则返回 null。 |\n| childNodes | Array\\<[Element](#element)\\> | 是 | - |  获取当前节点包含的子节点的集合 |\n| nodeName | string | 是 | - |  获取当前节点的节点名称 |\n| dataset | Map\\<string, any\\> | 是 | - |  获取节点上自定义数据属性（data-*）的集合 |\n| attributes | Map\\<string, any\\> | 是 | - |  获取节点上所有属性节点的集合 |\n| style | [CSSStyleDeclaration](/uni-app-x/dom/cssstyledeclaration.md) | 是 | - |  获取节点的CSS样式对象 |\n| scrollHeight | number | 是 | - |  表示节点的滚动视图高度 |\n| scrollLeft | number | 是 | - |  表示该节点横向滚动条距离最左的位移。 |\n| scrollTop | number | 是 | - |  表示该节点纵向滚动条距离 |\n| scrollWidth | number | 是 | - |  表示节点的滚动视图宽度 |\n| getNodeId | () => string | 是 | - |  获取节点标识。 |\n| appendChild | (aChild: [Element](#element)) => void | 是 | - |  将一个节点添加到指定父节点的子节点列表的末尾处。如果将被插入的节点已经存在于当前文档的文档树中，那么将会它从原先的位置移动到新的位置。 |\n| insertBefore | (newChild: [Element](#element), refChild: [Element](#element)) => void | 是 | - |  在参考节点之前插入一个拥有指定父节点的子节点。如果给定的子节点是对文档中现有节点的引用，insertBefore() 会将其从当前位置移动到新位置。 |\n| setAttribute | (key: string, value?: any) => void | 是 | - |  设置指定节点上的某个属性值。如果设置的属性已经存在，则更新该属性值；否则使用指定的名称和值添加一个新的属性。 |\n| getAttribute | (key: string) => any | 是 | - |  获取节点指定的属性值，如果指定的属性不存在则返回null。 |\n| hasAttribute | (key: string) => boolean | 是 | - |  返回改节点是否包含有指定的属性，属性存在则返回true，否则返回false。 |\n| removeAttribute | (key: string) => void | 是 | - |  从节点中删除一个属性，如果指定的属性不存在，则不做任何操作，也不会产生错误。 |\n| getBoundingClientRect | () => [DOMRect](/uni-app-x/dom/domrect.md) | 是 | - |  获取节点的大小及其相对于窗口的位置信息。 |\n| getDrawableContext | () => [DrawableContext](/uni-app-x/dom/drawablecontext.md) | 是 | - |  获取组件的绘制对象，仅uvue页面中的 view 组件支持，其它组件不支持则返回null。 |\n| addEventListener | (type: string, callback: (event: T) => R) => void | 是 | - |  将指定的监听器注册到节点对象上，当该对象触发指定的事件时，指定的回调函数就会被执行。 |\n| removeEventListener | (type: string) => void | 是 | - |  删除使用 addEventListener 方法添加的事件监听器。 |\n| removeChild | (aChild: [Element](#element)) => [Element](#element) | 是 | - |  从节点中删除一个子节点，返回删除的节点。 |\n| remove | () => void | 是 | - |  把节点对象从它所属的 DOM 树中删除。 |\n| dispatchEvent | (type: string, value: [Event](/uni-app-x/component/common#event)) => void | 是 | - |  向一个指定的事件目标派发一个 Event，并以合适的顺序（同步地）调用此事件的监听器回调函数。 |\n| scrollTo | (x: number, y: number) => void | 是 | - |  使界面滚动到给定元素的指定坐标位置 |\n| scrollBy | (x: number, y: number) => void | 是 | - |  使得元素滚动一段特定距离 |\n","returnValue":"","compatibility":"","tutorial":""},"setAttribute":{"name":"#### setAttribute(key, value?) @setattribute","description":"\n设置指定节点上的某个属性值。如果设置的属性已经存在，则更新该属性值；否则使用指定的名称和值添加一个新的属性。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | 属性名称 |\n| value | any | 否 | - | 属性值域 可为空 |","returnValue":"","compatibility":"","tutorial":""},"getAttribute":{"name":"#### getAttribute(key) @getattribute","description":"\n获取节点指定的属性值，如果指定的属性不存在则返回null。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | 属性名称 |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| any | \n","compatibility":"","tutorial":""},"hasAttribute":{"name":"#### hasAttribute(key) @hasattribute","description":"\n返回改节点是否包含有指定的属性，属性存在则返回true，否则返回false。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | 属性名称 |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| boolean | \n","compatibility":"","tutorial":""},"removeAttribute":{"name":"#### removeAttribute(key) @removeattribute","description":"\n从节点中删除一个属性，如果指定的属性不存在，则不做任何操作，也不会产生错误。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| key | string | 是 | - | 属性名称 |","returnValue":"","compatibility":"","tutorial":""},"getBoundingClientRect":{"name":"#### getBoundingClientRect() @getboundingclientrect","description":"\n获取节点的大小及其相对于窗口的位置信息。","param":"","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| [DOMRect](/uni-app-x/dom/domrect.md) | \n","compatibility":"","tutorial":""},"getDrawableContext":{"name":"#### getDrawableContext() @getdrawablecontext","description":"\n获取组件的绘制对象，仅uvue页面中的 view 组件支持，其它组件不支持则返回null。","param":"","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| [DrawableContext](/uni-app-x/dom/drawablecontext.md) | \n","compatibility":"","tutorial":""},"addEventListener":{"name":"#### addEventListener(type, callback) @addeventlistener","description":"\n将指定的监听器注册到节点对象上，当该对象触发指定的事件时，指定的回调函数就会被执行。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 事件类型 |\n| callback | (event: T) => R | 是 | - | 事件监听器 T表示event类型，R表示返回值类型 |","returnValue":"","compatibility":"","tutorial":""},"removeEventListener":{"name":"#### removeEventListener(type) @removeeventlistener","description":"\n删除使用 addEventListener 方法添加的事件监听器。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 事件类型 |","returnValue":"","compatibility":"","tutorial":""},"removeChild":{"name":"#### removeChild(aChild) @removechild","description":"\n从节点中删除一个子节点，返回删除的节点。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| aChild | [Element](#element) | 是 | - | 被删除子节点对象 |\n###### Element @element \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| firstChild | [Element](#element) | 否 | - |  获取当前节点的的第一个子节点，如果节点是无子节点，则返回 null。 |\n| lastChild | [Element](#element) | 否 | - |  获取当前节点的最后一个子节点，如果没有子节点，则返回 null。 |\n| parentNode | [Element](#element) | 否 | - |  获取当前节点在 DOM 树中的父节点，如果没有父节点（如未添加到DOM树中），则返回null。 |\n| previousSibling | [Element](#element) | 否 | - |  获取当前节点的前一个同级节点，没有则返回null。 |\n| nextSibling | [Element](#element) | 否 | - |  获取在 DOM 树中紧跟在其后面的同级节点，如果指定的节点为最后一个节点，则返回 null。 |\n| childNodes | Array\\<[Element](#element)\\> | 是 | - |  获取当前节点包含的子节点的集合 |\n| nodeName | string | 是 | - |  获取当前节点的节点名称 |\n| dataset | Map\\<string, any\\> | 是 | - |  获取节点上自定义数据属性（data-*）的集合 |\n| attributes | Map\\<string, any\\> | 是 | - |  获取节点上所有属性节点的集合 |\n| style | [CSSStyleDeclaration](/uni-app-x/dom/cssstyledeclaration.md) | 是 | - |  获取节点的CSS样式对象 |\n| scrollHeight | number | 是 | - |  表示节点的滚动视图高度 |\n| scrollLeft | number | 是 | - |  表示该节点横向滚动条距离最左的位移。 |\n| scrollTop | number | 是 | - |  表示该节点纵向滚动条距离 |\n| scrollWidth | number | 是 | - |  表示节点的滚动视图宽度 |\n| getNodeId | () => string | 是 | - |  获取节点标识。 |\n| appendChild | (aChild: [Element](#element)) => void | 是 | - |  将一个节点添加到指定父节点的子节点列表的末尾处。如果将被插入的节点已经存在于当前文档的文档树中，那么将会它从原先的位置移动到新的位置。 |\n| insertBefore | (newChild: [Element](#element), refChild: [Element](#element)) => void | 是 | - |  在参考节点之前插入一个拥有指定父节点的子节点。如果给定的子节点是对文档中现有节点的引用，insertBefore() 会将其从当前位置移动到新位置。 |\n| setAttribute | (key: string, value?: any) => void | 是 | - |  设置指定节点上的某个属性值。如果设置的属性已经存在，则更新该属性值；否则使用指定的名称和值添加一个新的属性。 |\n| getAttribute | (key: string) => any | 是 | - |  获取节点指定的属性值，如果指定的属性不存在则返回null。 |\n| hasAttribute | (key: string) => boolean | 是 | - |  返回改节点是否包含有指定的属性，属性存在则返回true，否则返回false。 |\n| removeAttribute | (key: string) => void | 是 | - |  从节点中删除一个属性，如果指定的属性不存在，则不做任何操作，也不会产生错误。 |\n| getBoundingClientRect | () => [DOMRect](/uni-app-x/dom/domrect.md) | 是 | - |  获取节点的大小及其相对于窗口的位置信息。 |\n| getDrawableContext | () => [DrawableContext](/uni-app-x/dom/drawablecontext.md) | 是 | - |  获取组件的绘制对象，仅uvue页面中的 view 组件支持，其它组件不支持则返回null。 |\n| addEventListener | (type: string, callback: (event: T) => R) => void | 是 | - |  将指定的监听器注册到节点对象上，当该对象触发指定的事件时，指定的回调函数就会被执行。 |\n| removeEventListener | (type: string) => void | 是 | - |  删除使用 addEventListener 方法添加的事件监听器。 |\n| removeChild | (aChild: [Element](#element)) => [Element](#element) | 是 | - |  从节点中删除一个子节点，返回删除的节点。 |\n| remove | () => void | 是 | - |  把节点对象从它所属的 DOM 树中删除。 |\n| dispatchEvent | (type: string, value: [Event](/uni-app-x/component/common#event)) => void | 是 | - |  向一个指定的事件目标派发一个 Event，并以合适的顺序（同步地）调用此事件的监听器回调函数。 |\n| scrollTo | (x: number, y: number) => void | 是 | - |  使界面滚动到给定元素的指定坐标位置 |\n| scrollBy | (x: number, y: number) => void | 是 | - |  使得元素滚动一段特定距离 |\n","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| [Element](#element) | \n\n###### Element @element \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| firstChild | [Element](#element) | 否 | - |  获取当前节点的的第一个子节点，如果节点是无子节点，则返回 null。 |\n| lastChild | [Element](#element) | 否 | - |  获取当前节点的最后一个子节点，如果没有子节点，则返回 null。 |\n| parentNode | [Element](#element) | 否 | - |  获取当前节点在 DOM 树中的父节点，如果没有父节点（如未添加到DOM树中），则返回null。 |\n| previousSibling | [Element](#element) | 否 | - |  获取当前节点的前一个同级节点，没有则返回null。 |\n| nextSibling | [Element](#element) | 否 | - |  获取在 DOM 树中紧跟在其后面的同级节点，如果指定的节点为最后一个节点，则返回 null。 |\n| childNodes | Array\\<[Element](#element)\\> | 是 | - |  获取当前节点包含的子节点的集合 |\n| nodeName | string | 是 | - |  获取当前节点的节点名称 |\n| dataset | Map\\<string, any\\> | 是 | - |  获取节点上自定义数据属性（data-*）的集合 |\n| attributes | Map\\<string, any\\> | 是 | - |  获取节点上所有属性节点的集合 |\n| style | [CSSStyleDeclaration](/uni-app-x/dom/cssstyledeclaration.md) | 是 | - |  获取节点的CSS样式对象 |\n| scrollHeight | number | 是 | - |  表示节点的滚动视图高度 |\n| scrollLeft | number | 是 | - |  表示该节点横向滚动条距离最左的位移。 |\n| scrollTop | number | 是 | - |  表示该节点纵向滚动条距离 |\n| scrollWidth | number | 是 | - |  表示节点的滚动视图宽度 |\n| getNodeId | () => string | 是 | - |  获取节点标识。 |\n| appendChild | (aChild: [Element](#element)) => void | 是 | - |  将一个节点添加到指定父节点的子节点列表的末尾处。如果将被插入的节点已经存在于当前文档的文档树中，那么将会它从原先的位置移动到新的位置。 |\n| insertBefore | (newChild: [Element](#element), refChild: [Element](#element)) => void | 是 | - |  在参考节点之前插入一个拥有指定父节点的子节点。如果给定的子节点是对文档中现有节点的引用，insertBefore() 会将其从当前位置移动到新位置。 |\n| setAttribute | (key: string, value?: any) => void | 是 | - |  设置指定节点上的某个属性值。如果设置的属性已经存在，则更新该属性值；否则使用指定的名称和值添加一个新的属性。 |\n| getAttribute | (key: string) => any | 是 | - |  获取节点指定的属性值，如果指定的属性不存在则返回null。 |\n| hasAttribute | (key: string) => boolean | 是 | - |  返回改节点是否包含有指定的属性，属性存在则返回true，否则返回false。 |\n| removeAttribute | (key: string) => void | 是 | - |  从节点中删除一个属性，如果指定的属性不存在，则不做任何操作，也不会产生错误。 |\n| getBoundingClientRect | () => [DOMRect](/uni-app-x/dom/domrect.md) | 是 | - |  获取节点的大小及其相对于窗口的位置信息。 |\n| getDrawableContext | () => [DrawableContext](/uni-app-x/dom/drawablecontext.md) | 是 | - |  获取组件的绘制对象，仅uvue页面中的 view 组件支持，其它组件不支持则返回null。 |\n| addEventListener | (type: string, callback: (event: T) => R) => void | 是 | - |  将指定的监听器注册到节点对象上，当该对象触发指定的事件时，指定的回调函数就会被执行。 |\n| removeEventListener | (type: string) => void | 是 | - |  删除使用 addEventListener 方法添加的事件监听器。 |\n| removeChild | (aChild: [Element](#element)) => [Element](#element) | 是 | - |  从节点中删除一个子节点，返回删除的节点。 |\n| remove | () => void | 是 | - |  把节点对象从它所属的 DOM 树中删除。 |\n| dispatchEvent | (type: string, value: [Event](/uni-app-x/component/common#event)) => void | 是 | - |  向一个指定的事件目标派发一个 Event，并以合适的顺序（同步地）调用此事件的监听器回调函数。 |\n| scrollTo | (x: number, y: number) => void | 是 | - |  使界面滚动到给定元素的指定坐标位置 |\n| scrollBy | (x: number, y: number) => void | 是 | - |  使得元素滚动一段特定距离 |\n","compatibility":"","tutorial":""},"remove":{"name":"#### remove() @remove","description":"\n把节点对象从它所属的 DOM 树中删除。","param":"","returnValue":"","compatibility":"","tutorial":""},"dispatchEvent":{"name":"#### dispatchEvent(type, value) @dispatchevent","description":"\n向一个指定的事件目标派发一个 Event，并以合适的顺序（同步地）调用此事件的监听器回调函数。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | 事件类型 |\n| value | [Event](/uni-app-x/component/common#event) | 是 | - | 事件返回对象 |","returnValue":"","compatibility":"","tutorial":""},"scrollTo":{"name":"#### scrollTo(x, y) @scrollto","description":"\n使界面滚动到给定元素的指定坐标位置","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 是 | - | x轴要滚动到坐标位置(单位px) |\n| y | number | 是 | - | y轴要滚动到坐标位置(单位px) |","returnValue":"","compatibility":"","tutorial":""},"scrollBy":{"name":"#### scrollBy(x, y) @scrollby","description":"\n使得元素滚动一段特定距离","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 是 | - | x轴要滚动的距离(单位px) |\n| y | number | 是 | - | y轴要滚动的距离(单位px) |","returnValue":"","compatibility":"","tutorial":""}}},"CSSStyleDeclaration":{"name":"## CSSStyleDeclaration","description":"\n获取节点的CSS样式对象","extends":"","param":"","methods":{"setProperty":{"name":"#### setProperty(name, value?) @setproperty","description":"\n对CSS指定样式设置一个新值，如有此样式已存在则更新。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| name | string | 是 | - | CSS样式名称 |\n| value | any | 否 | - | 要设置的新CSS样式值 |","returnValue":"","compatibility":"","tutorial":""},"getPropertyValue":{"name":"#### getPropertyValue(property) @getpropertyvalue","description":"\n获取CSS指定的样式值，如果指定的样式不存在则返回null。","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| property | string | 是 | - | 要获取的CSS样式名称 |","returnValue":"##### 返回值 \n\n| 类型 |\n| :- |\n| any | \n","compatibility":"","tutorial":""}}},"DOMRect":{"name":"## DOMRect","description":"\n一个 DOMRect 代表一个矩形。","extends":"","param":"\n### 构造函数\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 否 | - | - |\n| y | number | 否 | - | - |\n| width | number | 否 | - | - |\n| height | number | 否 | - | - |\n\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| width | number | 是 | - |  矩形的宽 |\n| height | number | 是 | - |  矩形的高 |\n| x | number | 是 | - |  矩形原点的x坐标 |\n| y | number | 是 | - |  矩形原点的y坐标 |\n| left | number | 是 | - |  矩形的左坐标值 |\n| right | number | 是 | - |  矩形的右坐标值 |\n| top | number | 是 | - |  矩形的顶坐标值 |\n| bottom | number | 是 | - |  矩形的底坐标值 |\n","methods":{}},"DrawableContext":{"name":"## DrawableContext","description":"","extends":"","param":"\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| font | string | 是 | 10px |  设置字体大小 |\n| fillStyle | string | 是 | #000 (黑色) |  设置填充颜色 |\n| lineCap | string | 是 | butt |  指定如何绘制每一条线条末端的属性，可选值：`butt`线段末端以方形结束；`round`线段末端以圆形结束；`square`线段末端以方形结束，但是会增加一个一半宽度的矩形区域。 |\n| lineDashOffset | number | 是 | - |  设置虚线偏移量 |\n| lineJoin | string | 是 | miter |  设置 2 个长度不为 0 的线条相连部分如何连接在一起的属性，可选值：`bevel`斜角；`round`圆角；`miter`尖角。 |\n| lineWidth | number | 是 | 1px |  设置线条的宽度 |\n| strokeStyle | string | 是 | #000 (黑色) |  设置边框的颜色 |\n| textAlign | string | 是 | left |  设置文本的对齐方式，可取值：`left`左对齐；`center`居中对齐；`right`右对齐。 |\n","methods":{"beginPath":{"name":"#### beginPath() @beginpath","description":"\n创建一个新的空路径","param":"","returnValue":"","compatibility":"","tutorial":""},"arc":{"name":"#### arc(x, y, radius, startAngle, endAngle, anticlockwise) @arc","description":"\n绘制一段弧线","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 是 | - | 圆心的X轴坐标 |\n| y | number | 是 | - | 圆心的Y轴坐标 |\n| radius | number | 是 | - | 圆弧的半径 |\n| startAngle | number | 是 | - | 圆弧的起始点，x 轴方向开始计算，单位为弧度 |\n| endAngle | number | 是 | - | 圆弧的终点，单位为弧度 |\n| anticlockwise | boolean | 是 | true | 圆弧绘制方向，true：逆时针绘制，false：顺时针绘制。 |","returnValue":"","compatibility":"","tutorial":""},"moveTo":{"name":"#### moveTo(x, y) @moveto","description":"\n将一个新的路径的起始点移动到 (x，y) 坐标","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 是 | - | 点的X轴坐标 |\n| y | number | 是 | - | 点的Y轴坐标 |","returnValue":"","compatibility":"","tutorial":""},"rect":{"name":"#### rect(x, y, width, height) @rect","description":"\n创建一个矩形路径","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 是 | - | 矩形起点的X轴坐标 |\n| y | number | 是 | - | 矩形起点的Y轴坐标 |\n| width | number | 是 | - | 矩形宽度 |\n| height | number | 是 | - | 矩形高度 |","returnValue":"","compatibility":"","tutorial":""},"lineTo":{"name":"#### lineTo(x, y) @lineto","description":"\n将路径的最后一个点连接到 (x，y) 坐标","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 是 | - | 线终点的X轴坐标 |\n| y | number | 是 | - | 线终点的Y轴坐标 |","returnValue":"","compatibility":"","tutorial":""},"closePath":{"name":"#### closePath() @closepath","description":"\n闭合路径，将最后一个点与起点连接起来。如果图形已经封闭，或者只有一个点，那么此方法不会产生任何效果。","param":"","returnValue":"","compatibility":"","tutorial":""},"stroke":{"name":"#### stroke() @stroke","description":"\n绘制当前或已经存在的路径的边框。","param":"","returnValue":"","compatibility":"","tutorial":""},"strokeRect":{"name":"#### strokeRect(x, y, width, height) @strokerect","description":"\n绘制一个矩形框","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 是 | - | 矩形起点的X轴坐标 |\n| y | number | 是 | - | 矩形起点的Y轴坐标 |\n| width | number | 是 | - | 矩形宽度 |\n| height | number | 是 | - | 矩形高度 |","returnValue":"","compatibility":"","tutorial":""},"strokeText":{"name":"#### strokeText(text, x, y) @stroketext","description":"\n绘制空心字符","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| text | string | 是 | - | 要绘制的字符 |\n| x | number | 是 | - | 字符开始绘制的X轴坐标 |\n| y | number | 是 | - | 字符开始绘制的Y轴坐标 |","returnValue":"","compatibility":"","tutorial":""},"fill":{"name":"#### fill(fillRule) @fill","description":"\n填充当前或已存在的路径","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| fillRule | string | 是 | nonzero | 填充规则。可取值：`nonzero`非零环绕规则；`evenodd`奇偶环绕规则。 |","returnValue":"","compatibility":"","tutorial":""},"fillRect":{"name":"#### fillRect(x, y, width, height) @fillrect","description":"\n绘制一个实心矩形","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| x | number | 是 | - | 矩形起点的X轴坐标 |\n| y | number | 是 | - | 矩形起点的Y轴坐标 |\n| width | number | 是 | - | 矩形宽度 |\n| height | number | 是 | - | 矩形高度 |","returnValue":"","compatibility":"","tutorial":""},"fillText":{"name":"#### fillText(text, x, y) @filltext","description":"\n绘制实心字符","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| text | string | 是 | - | 要绘制的字符 |\n| x | number | 是 | - | 字符开始绘制的X轴坐标 |\n| y | number | 是 | - | 字符开始绘制的Y轴坐标 |","returnValue":"","compatibility":"","tutorial":""},"reset":{"name":"#### reset() @reset","description":"\n清空绘制数据","param":"","returnValue":"","compatibility":"","tutorial":""},"update":{"name":"#### update() @update","description":"\n将所有绘制内容更新到画布上","param":"","returnValue":"","compatibility":"","tutorial":""},"setLineDash":{"name":"#### setLineDash(segments) @setlinedash","description":"\n设置虚线样式","param":"##### 参数 \n\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| segments | number\\[\\] | 是 | - | 一组描述交替绘制线段和间距长度的数字。 |","returnValue":"","compatibility":"","tutorial":""}}},"CustomEvent":{"name":"## CustomEvent","description":"","extends":"```mermaid\nclassDiagram\n\nEvent <|-- CustomEvent : Extend\n```","param":"\n### 构造函数\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | - |\n| CustomEventOptions | [CustomEventOptions\\<T\\>](#customeventoptions) | 是 | - |  |\n\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| detail | T | 是 | - | - |\n| type | string | 是 | - |  事件类型 |\n| target | [Element](#element) | 是 | - |  触发事件的组件 |\n| currentTarget | [Element](#element) | 是 | - |  当前组件 |\n| timeStamp | number | 是 | - |  事件发生时的时间戳 |\n","methods":{"stopPropagation":{"name":"#### stopPropagation() @stoppropagation","description":"\n阻止当前事件的进一步传播","param":"","returnValue":"","compatibility":"","tutorial":""},"preventDefault":{"name":"#### preventDefault() @preventdefault","description":"\n阻止当前事件的默认行为","param":"","returnValue":"","compatibility":"","tutorial":""}}},"CustomEventOptions":{"name":"## CustomEventOptions","description":"","extends":"","param":"\n### 构造函数\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| detail | T | 是 | - | - |\n\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| detail | T | 是 | - | - |\n","methods":{}},"MouseEvent":{"name":"## MouseEvent","description":"","extends":"```mermaid\nclassDiagram\n\nEvent <|-- MouseEvent : Extend\n```","param":"\n### 构造函数\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| type | string | 是 | - | - |\n| x | number | 是 | - | - |\n| y | number | 是 | - | - |\n| clientX | number | 是 | - | - |\n| clientY | number | 是 | - | - |\n| pageX | number | 是 | - | - |\n| pageY | number | 是 | - | - |\n| screenX | number | 是 | - | - |\n| screenY | number | 是 | - | - |\n\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| clientX | number | 是 | - |  相对于页面可显示区域左边的距离 |\n| clientY | number | 是 | - |  相对于页面可显示区域顶部的距离 |\n| x | number | 是 | - |  相对于页面可显示区域左边的距离，同`clientX` |\n| y | number | 是 | - |  相对于页面可显示区域顶部的距离，同`clientY` |\n| pageX | number | 是 | - |      相对于文档左边的距离 |\n| pageY | number | 是 | - |  相对于文档顶部的距离 |\n| screenX | number | 是 | - |  相对于屏幕左边距离 |\n| screenY | number | 是 | - |  相对于屏幕顶部的距离 |\n| type | string | 是 | - |  事件类型 |\n| target | [Element](#element) | 是 | - |  触发事件的组件 |\n| currentTarget | [Element](#element) | 是 | - |  当前组件 |\n| timeStamp | number | 是 | - |  事件发生时的时间戳 |\n","methods":{"stopPropagation":{"name":"#### stopPropagation() @stoppropagation","description":"\n阻止当前事件的进一步传播","param":"","returnValue":"","compatibility":"","tutorial":""},"preventDefault":{"name":"#### preventDefault() @preventdefault","description":"\n阻止当前事件的默认行为","param":"","returnValue":"","compatibility":"","tutorial":""}}},"TouchEvent":{"name":"## TouchEvent","description":"","extends":"```mermaid\nclassDiagram\n\nEvent <|-- TouchEvent : Extend\n```","param":"\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| touches | Array\\<[Touch](/uni-app-x/component/common#touch)\\> | 是 | - |  当前停留在屏幕中的触摸点信息的数组 |\n| changedTouches | Array\\<[Touch](/uni-app-x/component/common#touch)\\> | 是 | - |  当前变化的触摸点信息的数组 |\n| type | string | 是 | - |  事件类型 |\n| target | [Element](#element) | 是 | - |  触发事件的组件 |\n| currentTarget | [Element](#element) | 是 | - |  当前组件 |\n| timeStamp | number | 是 | - |  事件发生时的时间戳 |\n","methods":{"stopPropagation":{"name":"#### stopPropagation() @stoppropagation","description":"\n阻止当前事件的进一步传播","param":"","returnValue":"","compatibility":"","tutorial":""},"preventDefault":{"name":"#### preventDefault() @preventdefault","description":"\n阻止当前事件的默认行为","param":"","returnValue":"","compatibility":"","tutorial":""}}},"Touch":{"name":"## Touch","description":"","extends":"","param":"\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| clientX | number | 是 | - |  相对于页面可显示区域左边的距离 |\n| clientY | number | 是 | - |  相对于页面可显示区域顶部的距离 |\n| identifier | number | 是 | - |  触摸点的标识符。这个值在这根手指所引发的所有事件中保持一致，直到手指抬起。 |\n| pageX | number | 是 | - |  相对于文档左边的距离 |\n| pageY | number | 是 | - |  相对于文档顶部的距离 |\n| screenX | number | 是 | - |  相对于屏幕左边距离 |\n| screenY | number | 是 | - |  相对于屏幕顶部的距离 |\n| force | number | 否 | - |  返回当前触摸点按下的压力大小 |\n","methods":{}},"UniError":{"name":"## UniError","description":"\nuni api统一错误信息对象  ","extends":"```mermaid\nclassDiagram\n\nError <|-- UniError : Extend\n```","param":"\n### 构造函数\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| errSubject | string | 是 | - | - |\n| errCode | number | 是 | - | - |\n| errMsg | string | 是 | - | - |\n\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| errSubject | string | 是 | - |  统一错误主题（模块）名称 |\n| errCode | number | 是 | - |  统一错误码 |\n| errMsg | string | 是 | - |  统一错误描述信息 |\n| data | any | 否 | - |  错误信息中包含的数据 |\n| name | string | 是 | - | - |\n| message | string | 是 | - | - |\n| cause | [Error](/tutorial/err-spec.html#unierror) | 否 | - | - |\n","methods":{}},"Error":{"name":"## Error","description":"\nUTS错误信息对象","extends":"","param":"\n### 构造函数\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| message | string | 是 | - | - |\n| options | [UTSJSONObject](/uts/buildin-object-api/utsjsonobject.md) | 是 | - | - |\n\n### 属性值\n| 名称 | 类型 | 必填 | 默认值 | 描述 |\n| :- | :- | :- | :- | :- |\n| name | string | 是 | - | - |\n| message | string | 是 | - | - |\n| cause | [Error](/tutorial/err-spec.html#unierror) | 否 | - | - |\n","methods":{}}}